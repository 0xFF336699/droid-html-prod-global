{"version":3,"file":"static/chunks/pages/project-editor-8a34f62862fb09b0.js","mappings":"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","sources":["webpack://_N_E/../../libs/droid/project-interface/src/triggers/triggers-namespace.ts","webpack://_N_E/../../libs/droid/project-interface/src/triggers/time/time-namespace.ts","webpack://_N_E/../../libs/droid/project-interface/src/triggers/time/timeout/UI.tsx","webpack://_N_E/../../libs/droid/project-interface/src/triggers/time/timeout/ITriggerTimeout.inft.ts","webpack://_N_E/./src/components/page/trigger-list/groups/time/timeout/timeout.tsx","webpack://_N_E/./src/components/page/trigger-list/groups/time/time-group.ts","webpack://_N_E/../../libs/droid/project-interface/src/triggers/app/app-namespace.ts","webpack://_N_E/../../libs/droid/project-interface/src/triggers/app/when-activity-in/UI.tsx","webpack://_N_E/../../libs/droid/project-interface/src/triggers/app/when-activity-in/ITriggerWhenActivityIn.ts","webpack://_N_E/./src/components/page/trigger-list/groups/app/activity/activity-in.tsx","webpack://_N_E/./src/components/page/trigger-list/groups/app/app-group.ts","webpack://_N_E/./src/components/page/trigger-list/trigger.data.ts","webpack://_N_E/../../node_modules/.pnpm/react-i18next@15.6.0_i18next@24.2.3_typescript@5.7.3__react-dom@19.1.0_react@19.1.0__react@19.1.0_typescript@5.7.3/node_modules/react-i18next/dist/es/index.js","webpack://_N_E/../../libs/droid/project-interface/src/trigger/ITrigger.intf.tsx","webpack://_N_E/../../libs/droid/android/src/android/jsbridge.ts","webpack://_N_E/../../libs/fanfanlo/src/mui/dialog/EditableText.tsx","webpack://_N_E/../../node_modules/.pnpm/@mui+icons-material@6.4.12_@mui+material@6.4.12_@emotion+react@11.14.0_@types+react@19.1.8_re_5ewkm5t5g27pzq5tz62v6ktvti/node_modules/@mui/icons-material/esm/Close.js","webpack://_N_E/../../libs/droid/project/src/history/projectsHistoryMap.ts","webpack://_N_E/../../libs/droid/project/src/project/manager/edit-project-info-utils.ts","webpack://_N_E/../../libs/droid/project/src/project/ui/project/edit-project/contexts.tsx","webpack://_N_E/../../libs/fanfanlo/src/watcher/useWatchListOperation.tsx","webpack://_N_E/../../libs/fanfanlo/src/watcher/updateVersion.ts","webpack://_N_E/../../node_modules/.pnpm/@mui+icons-material@6.4.12_@mui+material@6.4.12_@emotion+react@11.14.0_@types+react@19.1.8_re_5ewkm5t5g27pzq5tz62v6ktvti/node_modules/@mui/icons-material/esm/Handyman.js","webpack://_N_E/../../node_modules/.pnpm/@mui+icons-material@6.4.12_@mui+material@6.4.12_@emotion+react@11.14.0_@types+react@19.1.8_re_5ewkm5t5g27pzq5tz62v6ktvti/node_modules/@mui/icons-material/esm/NotificationsNone.js","webpack://_N_E/../../node_modules/.pnpm/@mui+icons-material@6.4.12_@mui+material@6.4.12_@emotion+react@11.14.0_@types+react@19.1.8_re_5ewkm5t5g27pzq5tz62v6ktvti/node_modules/@mui/icons-material/esm/TableRows.js","webpack://_N_E/../../node_modules/.pnpm/@mui+icons-material@6.4.12_@mui+material@6.4.12_@emotion+react@11.14.0_@types+react@19.1.8_re_5ewkm5t5g27pzq5tz62v6ktvti/node_modules/@mui/icons-material/esm/DeleteOutline.js","webpack://_N_E/../../libs/droid/project/src/project/ui/project/edit-project/components/group/GroupCheck.tsx","webpack://_N_E/../../libs/droid/project/src/project/ui/project/edit-project/components/list-page-link/ActionListOrTriggerListPageLink.tsx","webpack://_N_E/../../libs/droid/project/src/project/ui/project/edit-project/trigger-action-group/trigger-action/action-group/action-list/action/Action.tsx","webpack://_N_E/../../libs/droid/project/src/project/ui/project/edit-project/trigger-action-group/trigger-action/action-group/action-list/ActionList.tsx","webpack://_N_E/../../libs/droid/project/src/project/ui/project/edit-project/trigger-action-group/trigger-action/action-group/ActionGroup.tsx","webpack://_N_E/../../libs/droid/project/src/project/ui/project/edit-project/trigger-action-group/trigger-action/trigger-group/trigger-list/trigger/Trigger.tsx","webpack://_N_E/../../libs/droid/project/src/project/ui/project/edit-project/trigger-action-group/trigger-action/trigger-group/trigger-list/TriggerList.tsx","webpack://_N_E/../../libs/droid/project/src/project/ui/project/edit-project/trigger-action-group/trigger-action/trigger-group/TriggerGroup.tsx","webpack://_N_E/../../libs/droid/project/src/project/ui/project/edit-project/trigger-action-group/trigger-action/TriggerAction.tsx","webpack://_N_E/../../libs/droid/project/src/project/ui/project/edit-project/trigger-action-group/TriggerActionGroup.tsx","webpack://_N_E/../../node_modules/.pnpm/@mui+icons-material@6.4.12_@mui+material@6.4.12_@emotion+react@11.14.0_@types+react@19.1.8_re_5ewkm5t5g27pzq5tz62v6ktvti/node_modules/@mui/icons-material/esm/Save.js","webpack://_N_E/../../libs/droid/project/src/project/ui/project/edit-project/EditProject.tsx","webpack://_N_E/./src/pages/project-editor/index.tsx","webpack://_N_E/../../libs/fanfanlo/src/mui/dialog/ButtonConfirm.tsx","webpack://_N_E/../../node_modules/.pnpm/@mui+icons-material@6.4.12_@mui+material@6.4.12_@emotion+react@11.14.0_@types+react@19.1.8_re_5ewkm5t5g27pzq5tz62v6ktvti/node_modules/@mui/icons-material/esm/Add.js","webpack://_N_E/?6a94","webpack://_N_E/../../node_modules/.pnpm/@mui+material@6.4.12_@emotion+react@11.14.0_@types+react@19.1.8_react@19.1.0__@emotion+styled_7n6ip7adzgskiknwagt7k5dnla/node_modules/@mui/material/IconButton/iconButtonClasses.js","webpack://_N_E/../../node_modules/.pnpm/@mui+material@6.4.12_@emotion+react@11.14.0_@types+react@19.1.8_react@19.1.0__@emotion+styled_7n6ip7adzgskiknwagt7k5dnla/node_modules/@mui/material/IconButton/IconButton.js"],"sourcesContent":["import { projectNamespace } from \"../core\";\r\n\r\nexport const triggersNamespace = `${projectNamespace}triggers/`","import { triggersNamespace } from \"../triggers-namespace\";\r\n\r\nexport const timeNamespace = `${triggersNamespace}time/`","import { useProxyWatch, useTranslation } from \"@fanfanlo\";\r\nimport { Box, Grid2 } from \"@mui/material\";\r\nimport { ITriggerTimeoutData } from \"./ITriggerTimeout.inft\";\r\n\r\n\r\nexport function UI(data: ITriggerTimeoutData) {\r\n    const { t } = useTranslation('droid-project-interface/triggers/time/timeout/content')\r\n    const [timeout] = useProxyWatch(data, 'javaData.timeout', data.javaData.timeout)\r\n    return(\r\n        <>\r\n            <Box sx={{ width: '100%' }}>\r\n                <Box>\r\n                    <b>{t('ITriggerTimeout.title')}</b>\r\n                </Box>\r\n                <Grid2 container sx={{ width: '100%' }}>\r\n                    <Grid2 size=\"grow\" container>\r\n                        <Box>\r\n                            <span>\r\n                                {t('ITriggerTimeout.content_delay')}\r\n                            </span>\r\n                            <span>\r\n                                <input\r\n                                    id=\"trigger-timeout-value-input\"\r\n                                    data-id=\"trigger-timeout-value-input\"\r\n                                    type=\"number\" value={timeout} onChange={(e)=>data.javaData.timeout = Number(e.target.value)} />\r\n                            </span>\r\n                            <span>\r\n                                {t('ITriggerTimeout.content_milliseconds')}\r\n                            </span>\r\n                        </Box>\r\n                    </Grid2>\r\n                </Grid2>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n","import { ulid } from \"ulid\";\r\nimport { ITriggerData, ITriggerJavaData, ITriggerShellData, createTriggerUtils } from \"../../../trigger\";\r\nimport { timeNamespace } from \"../time-namespace\";\r\nimport { UI } from \"./UI\";\r\n\r\nconst type = `${timeNamespace}timeout`\r\nexport interface ITriggerTimeoutJavaData extends ITriggerJavaData{\r\n    timeout:number\r\n}\r\nexport interface ITriggerTimeoutData extends ITriggerData<ITriggerShellData, ITriggerTimeoutJavaData>{\r\n}\r\n\r\nfunction createDefultData():ITriggerTimeoutData{\r\n    return {\r\n        id:ulid(),\r\n        type,\r\n        javaData:{\r\n            timeout:0\r\n        }\r\n    }\r\n}\r\n\r\nfunction init(){\r\n    \r\n}\r\n\r\nexport const triggerTimeoutUtils = createTriggerUtils(type, init, createDefultData, UI)\r\n\r\n\r\n","import { ActionOrTriggerListTypeEnum, IActionOrTriggerListPageParams } from \"@app/static\";\r\nimport { getTriggerOrActionListPageParams, ProjectMemberType, triggerTimeoutUtils } from \"@droid/project-interface\";\r\nimport { projectEventUtils } from \"@droid/project-interface\";\r\nimport { throwTraceError } from \"@fanfanlo\";\r\nimport { createActionOrTriggerButtonRender, IActionOrTriggerItem } from \"../../../../../../components/trigger-list-action-list-common/ITriggerList-IActionList-common.intf\";\r\n\r\nexport const timeoutTriggerItem:IActionOrTriggerItem = {\r\n    id: \"timeout-trigger-item-ce8c\",\r\n    i18nNs: \"homepage/components/page/trigger-list/groups/time/timeout/content\",\r\n    nameKey: \"content.name\",\r\n    group: \"timeoutTriggerItem.group\",\r\n    descriptionKey: \"content.description\",\r\n    type: \"trigger\",\r\n    LinkRender: createActionOrTriggerButtonRender(onSelect)\r\n}\r\n\r\nfunction onSelect({query, item}:{query:IActionOrTriggerListPageParams, item:IActionOrTriggerItem}){\r\n    const res = getTriggerOrActionListPageParams(query)\r\n    switch(query.type){\r\n        case ActionOrTriggerListTypeEnum.addAction:\r\n            const trigger = triggerTimeoutUtils.createDefultData()\r\n            if(!res.data.triggerGroup){\r\n                return throwTraceError('triggerGroup is not found', query)\r\n            }\r\n            projectEventUtils.dispatchEditEvent(projectEventUtils.EditType.add, {\r\n                projectMemberType: ProjectMemberType.triggerGroup,\r\n                data:trigger,\r\n                projectInfo:res.data\r\n            })\r\n            // res.data.triggerGroup.list.push(trigger)\r\n            // router.back()\r\n            window.history.back()\r\n            break;\r\n        case ActionOrTriggerListTypeEnum.updateAction:\r\n            \r\n            break;\r\n    }\r\n}","import { IActionOrTriggerGroup } from \"../../../../trigger-list-action-list-common/ITriggerList-IActionList-common.intf\";\r\nimport { timeoutTriggerItem } from \"./timeout/timeout\";\r\n\r\nexport const timeGroup:IActionOrTriggerGroup = {\r\n    i18nNs: \"homepage/components/page/trigger-list/groups/time/content\",\r\n    nameKey: \"content.name\",\r\n    descriptionKey: \"content.description\",\r\n    items: [\r\n        timeoutTriggerItem\r\n    ]\r\n}","import { triggersNamespace } from \"../triggers-namespace\";\r\n\r\nexport const appNamespace = `${triggersNamespace}app/`","import { ITriggerWhenActivityInData } from \"./ITriggerWhenActivityIn\"\r\nimport { useTranslation, useProxyWatch } from \"@fanfanlo\";\r\nimport { Box, Grid2, Stack, Button } from \"@mui/material\";\r\nimport { useRouter } from \"next/router\";\r\nimport { childToProjectDataUtils, IChildToProjectData } from \"../../../utils\";\r\nimport { IActionOrTriggerListPageParams, ActionOrTriggerListTypeEnum } from \"@app/static\";\r\nimport { triggerWhenActivityInUtils } from \"./ITriggerWhenActivityIn\";\r\nexport function UI(data: ITriggerWhenActivityInData){\r\n    const { t } = useTranslation('droid-project-interface/triggers/app/when-activity-in/content')\r\n    const router = useRouter()\r\n    const backPath = router.pathname;\r\n    const [pn] = useProxyWatch(data, \"javaData.pn\", data.javaData.pn)\r\n    const [an] = useProxyWatch(data, \"javaData.an\", data.javaData.an)\r\n    const [cn] = useProxyWatch(data, \"javaData.cn\", data.javaData.cn)\r\n    function onChangeClick() {\r\n        const projectInfo: IChildToProjectData = {}\r\n        childToProjectDataUtils.triggerList.getTriggerListByProp(data, projectInfo)\r\n        if (!projectInfo.project?.id || !projectInfo.triggerActionGroup?.id || !projectInfo.triggerAction?.id || !projectInfo.triggerGroup?.id) {\r\n            console.error('UpdateAppLink projectInfo is undefined', projectInfo)\r\n            return\r\n        }\r\n\r\n        const query: IActionOrTriggerListPageParams = {\r\n            backPath,\r\n            projectId: projectInfo.project?.id,\r\n            triggerActionGroupId: projectInfo.triggerActionGroup?.id,\r\n            triggerActionId: projectInfo.triggerAction?.id,\r\n            triggerGroupId: projectInfo.triggerGroup?.id,\r\n            type: ActionOrTriggerListTypeEnum.updateAction,\r\n            triggerId: data.id,\r\n            triggerType: triggerWhenActivityInUtils.type,\r\n        }\r\n        triggerWhenActivityInUtils.onClickChange?.({query})\r\n    }\r\n    return(\r\n        <>\r\n            <Box sx={{ width: '100%' }}>\r\n                <Box>\r\n                    <b>{t('content.title')}</b>\r\n                </Box>\r\n                <Grid2 container sx={{ width: '100%' }}>\r\n                    <Grid2 size=\"grow\" container>\r\n                        <Stack direction=\"column\" spacing={2}>\r\n                            <Box>\r\n                                <span>\r\n                                    {t('content.pnLabel')}\r\n                                </span>\r\n                                <span>\r\n                                    {pn}\r\n                                </span>\r\n                            </Box>\r\n                            <Box>\r\n                                <span>\r\n                                    {t('content.anLabel')}\r\n                                </span>\r\n                                <span>\r\n                                    {an}\r\n                                </span>\r\n                            </Box>\r\n                            <Box>\r\n                                <span>\r\n                                    {t('content.cnLabel')}\r\n                                </span>\r\n                                <span>\r\n                                    {cn}\r\n                                </span>\r\n                            </Box>\r\n                        </Stack>\r\n                    </Grid2>\r\n                    <Grid2 size={\"auto\"}>\r\n                        <Button onClick={onChangeClick}>\r\n                            <span>{t('content.changeBtnLabel')}</span>\r\n                        </Button>\r\n                    </Grid2>\r\n                </Grid2>\r\n            </Box>\r\n        </>\r\n    )\r\n}","import { createTriggerUtils, ITriggerData, ITriggerShellData } from \"../../../trigger/ITrigger.intf\";\r\nimport { appNamespace } from \"../app-namespace\";\r\nimport { ulid } from \"ulid\";\r\nimport { UI } from \"./UI\";\r\n\r\nconst type = `${appNamespace}when-activity-in`\r\n\r\nexport interface ITriggerWhenActivityInJavaData{\r\n    pn:string\r\n    an:string\r\n    cn?:string\r\n}\r\n\r\nexport interface ITriggerWhenActivityInData extends ITriggerData<ITriggerShellData, ITriggerWhenActivityInJavaData>{\r\n    \r\n}\r\n\r\nfunction createDefultData():ITriggerWhenActivityInData{\r\n    return {\r\n        id:ulid(),\r\n        type,\r\n        javaData:{\r\n            pn:\"\",\r\n            an:\"\",\r\n            cn:\"\"\r\n        }\r\n    }\r\n}\r\n\r\nfunction init(){\r\n    \r\n}   \r\n\r\nexport const triggerWhenActivityInUtils = createTriggerUtils<ITriggerWhenActivityInData>(type, init, createDefultData, UI)  ","import { IActionOrTriggerListPageParams } from \"@app/static\";\r\nimport { autoWebViewJs, isRealInAndroid, openPnAnInfoWindow, PnAnResultData } from \"@droid/android\";\r\nimport { getTriggerOrActionListPageParams, projectEventUtils } from \"@droid/project-interface\";\r\nimport { createActionOrTriggerButtonRender, IActionOrTriggerItem } from \"@src/components/trigger-list-action-list-common/ITriggerList-IActionList-common.intf\";\r\nimport { triggerWhenActivityInUtils } from \"@droid/project-interface\";\r\nimport { ProjectMemberType } from \"@droid/project-interface\";\r\nimport { createRandomEnglishCharacters } from \"@fanfanlo\";\r\n\r\n\r\nexport const activityInItem:IActionOrTriggerItem = {\r\n    id: \"activity-in-item-ce8c\",\r\n    i18nNs: \"homepage/components/page/trigger-list/groups/app/activity/content\",\r\n    nameKey: \"content.name\",\r\n    group: \"activityInItem.group\",\r\n    descriptionKey: \"content.description\",\r\n    type: \"trigger\",\r\n    LinkRender: createActionOrTriggerButtonRender(onAddSelect)\r\n}\r\ntriggerWhenActivityInUtils.onClickChange = onChangeSelect\r\n// async function onSelect({query, item}:{query:IActionOrTriggerListPageParams, item:IActionOrTriggerItem}){\r\n//     const res = getTriggerOrActionListPageParams(query)\r\n//     let info:PnAnResultData ;\r\n//     if(isRealInAndroid){\r\n//         info = await openPnAnInfoWindow()\r\n//     }else{\r\n//         info = {\r\n//             pn:`${createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5)}.${createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5)}.${createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5)}`,\r\n//             an:createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5)\r\n//         }\r\n//     }\r\n//     console.log('info=', info)\r\n//     const trigger = triggerWhenActivityInUtils.mergeDataToDefultData({javaData:{pn:info.pn, an:info.an, cn:info.cn}})\r\n//     projectEventUtils.dispatchEditEvent(projectEventUtils.EditType.add,{\r\n//         data:trigger,\r\n//         projectMemberType:ProjectMemberType.triggerGroup,\r\n//         projectInfo:res.data\r\n//     })\r\n//     window.history.back()\r\n// }\r\n\r\n\r\n\r\nasync function onSelect(){\r\n    let info:PnAnResultData ;\r\n    if(isRealInAndroid){\r\n        info = await openPnAnInfoWindow(true)\r\n    }else{\r\n        info = {\r\n            pn:`${createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5)}.${createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5)}.${createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5)}`,\r\n            an:createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5),\r\n            cn:createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5)\r\n        }\r\n    }\r\n    // console.log('info1=', info)\r\n    return info\r\n}\r\nasync function onAddSelect({query}:{query:IActionOrTriggerListPageParams}){\r\n    const info = await onSelect()\r\n    const res = getTriggerOrActionListPageParams(query)\r\n    const action = triggerWhenActivityInUtils.mergeDataToDefultData({javaData:{pn:info.pn, an:info.an, cn:info.cn}})\r\n    projectEventUtils.dispatchEditEvent(projectEventUtils.EditType.add,{\r\n        data:action,\r\n        projectMemberType:ProjectMemberType.triggerGroup,\r\n        projectInfo:res.data\r\n    })\r\n    console.log('ccccccccccccccall open self')\r\n    autoWebViewJs.openSelfByPackage()\r\n    window.history.back()\r\n}\r\n\r\nasync function onChangeSelect({query}:{query:IActionOrTriggerListPageParams}){\r\n    const info = await onSelect()\r\n    const res = getTriggerOrActionListPageParams(query)\r\n    projectEventUtils.dispatchEditEvent(projectEventUtils.EditType.updateJavaData,{\r\n        data:info,\r\n        projectMemberType:ProjectMemberType.trigger,\r\n        projectInfo:res.data\r\n    })\r\n    autoWebViewJs.openSelfByPackage()\r\n}","import { IActionOrTriggerGroup } from \"../../../../trigger-list-action-list-common/ITriggerList-IActionList-common.intf\";\r\nimport { activityInItem } from \"./activity/activity-in\";\r\n\r\nexport const appGroup:IActionOrTriggerGroup = {\r\n    i18nNs: \"homepage/components/page/trigger-list/groups/app/content\",\r\n    nameKey: \"content.name\",\r\n    descriptionKey: \"content.description\",\r\n    items: [\r\n        activityInItem\r\n    ]\r\n}   ","import { IActionOrTriggerGroupList } from \"../../trigger-list-action-list-common/ITriggerList-IActionList-common.intf\";\r\nimport { timeGroup } from \"./groups/time/time-group\";\r\nimport { appGroup } from \"./groups/app/app-group\";\r\n\r\nexport const triggerListGroups:IActionOrTriggerGroupList = [\r\n    timeGroup,\r\n    appGroup\r\n]\r\n\r\nexport async function initTriggerListGroups(){\r\n    triggerListGroups\r\n}\r\n","export * from \"C:\\\\work\\\\android-droid\\\\html\\\\website-2024-12\\\\node_modules\\\\.pnpm\\\\react-i18next@15.6.0_i18next@24.2.3_typescript@5.7.3__react-dom@19.1.0_react@19.1.0__react@19.1.0_typescript@5.7.3\\\\node_modules\\\\react-i18next\\\\dist\\\\es\\\\index.js\"","import { IActionOrTriggerListPageParams } from \"@app/static\";\r\nimport { INameIDData } from \"../common/INameIDData.intf\";\r\nimport { IPermissionData } from \"../permission\";\r\nimport { createMergeToDefaultData, mergeDataWith } from \"../utils/mergeToDefaultData\";\r\nimport { ITriggerGroup } from \"./ITriggerGroup.intf\";\r\n\r\nexport interface ITriggerOn{\r\n    id:string\r\n}\r\nexport interface ITriggerOff{\r\n    id:string\r\n}\r\nexport interface ITriggerJavaData {\r\n    on?:ITriggerOn[]\r\n    off?:ITriggerOff[]\r\n}\r\nexport interface ITriggerShellData {\r\n}\r\n\r\nexport interface ITriggerData<T extends ITriggerShellData, U extends ITriggerJavaData> extends INameIDData<T, U>{\r\n    // type:string\r\n    // i18n?:II18nValueConf\r\n    permissions?:IPermissionData[]\r\n    javaData:U\r\n}\r\n\r\n\r\nexport interface ITriggerUtils<T extends ITriggerData<ITriggerShellData, ITriggerJavaData>>{\r\n    type:string\r\n    mergeDataToDefultData:(data:Partial<T>)=>T\r\n    createDefultData:()=>T,\r\n    create:(triggerGroup:ITriggerGroup, data?:Partial<T>)=>void\r\n    update:(trigger:T, data?:Partial<T>)=>void\r\n    UI:(data:T)=>React.ReactNode\r\n    init:()=>void\r\n    //点击更改按钮后调用不是page页面的时候需要，例如更改返回首页.\r\n    onClickChange?:(data:{query:IActionOrTriggerListPageParams}, ...rest:any[])=>void\r\n}\r\n\r\nexport interface ITriggerUtilsMap{\r\n    [key:string]:ITriggerUtils<any>\r\n}\r\n\r\nexport const TriggerUtilsMap:ITriggerUtilsMap = {}\r\n\r\nexport function registerTriggerUtils(key:string,utils:ITriggerUtils<any>){\r\n    if(key in TriggerUtilsMap){\r\n        throw new Error(`TriggerUtilsMap already has key: ${key}`)\r\n    }\r\n    TriggerUtilsMap[key] = utils\r\n}\r\n\r\nexport function getTriggerUtils<T extends ITriggerData<ITriggerShellData, ITriggerJavaData>>(key:string):ITriggerUtils<T>{\r\n    return TriggerUtilsMap[key]\r\n}\r\n\r\nexport function createTriggerUtils<T extends ITriggerData<ITriggerShellData, ITriggerJavaData>>(type:string, init:()=>void, createDefultData:()=>T, UI:(data:T)=>React.ReactNode):ITriggerUtils<T>{\r\n    const res = {\r\n        type,\r\n        mergeDataToDefultData:createMergeToDefaultData(createDefultData),\r\n        createDefultData,\r\n        create:(triggerGroup:ITriggerGroup, data?:Partial<T>)=>{\r\n            const trigger = createDefultData()\r\n            triggerGroup.list.push(trigger)\r\n        },\r\n        update:(trigger:T, data?:Partial<T>)=>{\r\n            mergeDataWith(trigger, data)\r\n        },\r\n        UI,\r\n        init,\r\n    }\r\n    registerTriggerUtils(type,res)\r\n    return res\r\n}   \r\n","import { Dispatcher, IDispatcherEventMap, createDispatchEvent } from \"@fanfanlo\";\r\n\r\nconst hasWindow = typeof window !== \"undefined\";\r\nexport let androidJsGlobalName = \"android\"\r\nexport let android = hasWindow ? (window as any)[androidJsGlobalName] : '';\r\nexport const global = (hasWindow ? window.global || (window.global=window) : {}) as any;\r\nexport const jsBridgeDispatcher = new Dispatcher()\r\n\r\nexport interface ICheckBrowserCanBackEvent{\r\n    canBack:boolean\r\n}\r\nexport interface IJsBridgeEventMap extends IDispatcherEventMap{\r\n    // 安卓询问js是否可以响应后退键\r\n    checkBrowserCanBack: (event:ICheckBrowserCanBackEvent)=>void\r\n}\r\nexport function getWebViewJsId(){\r\n    return android ? android.webViewJsId() : \"-1\";\r\n}\r\nconst listeningMap:Record<string, any> = {}\r\n// initJsBridge();\r\nlet initJsBridgeCalled = false\r\n// 供安卓调用js，必须初始化。\r\nexport function initJsBridge(){\r\n    if(!android)return;\r\n    if(initJsBridgeCalled)return;\r\n    initJsBridgeCalled = true\r\n    global.onCallJsEvent = function (event:any){\r\n        console.log(\"js bridge global event\", JSON.stringify(event));\r\n        if(!event)return;\r\n        try {\r\n            for (const [index, value] of Object.entries(listeningMap)) {\r\n                if(value.callbackEventType !== event.type)continue;\r\n                value.fun(event.data);\r\n                if(value.once){\r\n                    delete listeningMap[index];\r\n                    // webViewJsListen时传入了once，所以java端自己就卸载侦听了\r\n                    // webViewJsRemoveListen(value.target, index)\r\n                }\r\n            }\r\n            const e = createDispatchEvent(event.data, undefined, undefined, event.type)\r\n            jsBridgeDispatcher.dispatch(event.type, e)\r\n            // 返回时不需要json序列化，容器会对其进行自动序列化\r\n            if(e.result !== undefined)return e.result \r\n            // 如果没有事件的返回值，则返回一个统一的__okkey__\r\n            return \"__okkey__\"\r\n        }catch (e){\r\n            console.log('global on call js event error', e);\r\n        }\r\n        return ;\r\n    }\r\n}\r\nexport function webViewJsListen(target:any, type:any, callbackEventType:any, once:any, fun:any){\r\n    if(!android)return -1;\r\n    const index = android?.listen(target, type, callbackEventType, once)\r\n    if(!index)return -1;\r\n    let key = index.toString();\r\n    try{\r\n        key = `${typeof target === 'string' ? target : 'target'}-${typeof type === 'string' ? type : 'type'}-${typeof callbackEventType === 'string' ? callbackEventType : 'callbackEventType'}-${typeof index === 'string' ? index : index.toString()}`\r\n    }catch(e){\r\n        console.log('listen_fn 2 error', e)\r\n    }\r\n    listeningMap[key] = {once, fun, target, type, callbackEventType}\r\n    return key;\r\n}\r\n\r\nexport function webViewJsRemoveListen(target:any, index:any){\r\n    if(!android)return;\r\n    return android.removeListen(target, index)\r\n}\r\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from \"@mui/material\"\r\nimport { PropsWithChildren, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\ninterface IEditableTextProps {\r\n    setText: (text: string) => void\r\n    title?: string\r\n    cancelText?: string\r\n    saveText?: string\r\n    contentText?: string\r\n    helperText?: string\r\n    minHeight?: string\r\n}\r\nimport React from 'react'\r\nexport function EditableText({ setText, title, cancelText, saveText, contentText, helperText, minHeight, children }: IEditableTextProps & PropsWithChildren) {\r\n    const { t } = useTranslation('fanfanlo/mui/dialog/content')\r\n    const [editText, setEditText] = useState('')\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    function handleEdit(s: string) {\r\n        setEditText(s)\r\n    }\r\n    return (\r\n        <>\r\n            <span style={{cursor: 'pointer', width: '100%', textAlign: 'center', display:\"inline-block\", backgroundColor: '', minHeight:minHeight || '1rem'}} onClick={() => setIsEditing(true)}><span >{children || ''}</span></span>\r\n            {isEditing && (\r\n                <Dialog open={isEditing} onClose={() => setIsEditing(false)}>\r\n                    <DialogTitle>{title ||t('EditableText.title')}</DialogTitle>\r\n                    {contentText && <DialogContent>{contentText}</DialogContent>}\r\n                    <DialogContent>\r\n                        <TextField\r\n                        id=\"editable-text\"\r\n                        aria-label=\"editable-text\"\r\n                            autoFocus\r\n                            required\r\n                            fullWidth\r\n                            helperText={helperText}\r\n                            variant=\"standard\"\r\n                            value={editText} onChange={(e) => handleEdit(e.target.value)} />\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button\r\n                        id=\"editable-text-cancel\"\r\n                        data-id=\"editable-text-cancel\"\r\n                        onClick={() => setIsEditing(false)}>{cancelText || t('EditableText.cancel')}</Button>\r\n                        <Button\r\n                        id=\"editable-text-save\"\r\n                        data-id=\"editable-text-save\"\r\n                        onClick={() => { setIsEditing(false); setText(editText) }}>{saveText || t('EditableText.save')}</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import { IProjectData } from \"@droid/project-interface\";\r\nimport { getProxyTarget, proxyUtils } from \"@fanfanlo\";\r\nimport _ from \"lodash\";\r\nimport { IProjectHistory } from \"./IProjectHistory.intf\";\r\n\r\nexport const projectsHistoryMap = new Map<string, IProjectHistory[]>()\r\n\r\nexport function addProjectHistory(history:IProjectHistory){\r\n    proxyUtils.runPauseProxyFn(()=>{\r\n        history.project = _.cloneDeep(getProxyTarget(history.project))\r\n    })\r\n    const p = history //_.cloneDeep(getProxyTarget(history))\r\n    const list = projectsHistoryMap.get(history.project.id)\r\n    if(!list){\r\n        projectsHistoryMap.set(history.project.id, [p])\r\n        return\r\n    }\r\n    list.push(p)\r\n}\r\n\r\nexport function getProjectHistory(projectId:string){\r\n    return projectsHistoryMap.get(projectId) || []\r\n}\r\n\r\nexport function removeProjectHistory(projectId:string){\r\n    projectsHistoryMap.delete(projectId)\r\n}\r\n\r\nexport function getProjectLastHistory(projectId:string){\r\n    const list = getProjectHistory(projectId)\r\n    return list[list.length - 1]\r\n}\r\n\r\nexport function takeProjectSnapshoot(project:IProjectData):boolean{\r\n    const last = getProjectLastHistory(project.id)\r\n    if(last && _.isEqual(last.project, project)){\r\n        return false\r\n    }\r\n    addProjectHistory({\r\n        index: last ? last.index + 1 : 0,\r\n        project,\r\n        date: new Date().toISOString()\r\n    })   \r\n    return true\r\n}\r\n\r\nexport function projectHistoryIsChanged(project:IProjectData):boolean{\r\n    const last = getProjectLastHistory(project.id)\r\n    return !last || !_.isEqual(last.project, project)\r\n\r\n}\r\n\r\nexport function isSameProjectHistoryId(id:number, projectId:string):boolean{\r\n    const last = getProjectLastHistory(projectId)\r\n    return last?.index === id\r\n}","import { IProjectData, projectStore } from '@droid/project-interface';\r\nimport { Dispatcher, loadI18nValue, Log, toProxy } from '@fanfanlo';\r\nimport { IProjectEditInfo } from './IProjectEditInfo.intf';\r\n// import { projectStore } from '../../storage';    \r\nimport toast from 'react-hot-toast';\r\nconst map: { [key: string]: IProjectEditInfo } = toProxy({});\r\nconst dispatcher = new Dispatcher();\r\nconst projectSavedEvent = 'project-saved';\r\nexport const editProjectInfoUtils = {\r\n  edit: (project: IProjectData) => {\r\n    // const info = map[project.id] || (map[project.id] = createProjectEditInfo(project));\r\n    const info = (map[project.id] = createProjectEditInfo(project));\r\n    return info;\r\n  },\r\n  getEditInfoById: (id: string) => {\r\n    if (map[id]) return map[id];\r\n    const project = projectStore.findProject(id);\r\n    if (project) return (map[id] = createProjectEditInfo(project));\r\n    return null;\r\n  },\r\n  listenProjectSaved: (fn: (project: IProjectData) => void) => {\r\n    return dispatcher.addListener(projectSavedEvent, fn);\r\n  },\r\n};\r\n\r\nexport function createProjectEditInfo(project: IProjectData): IProjectEditInfo {\r\n  const info = toProxy({\r\n    project,\r\n    askStay: false,\r\n    giveup: false,\r\n    updated: false,\r\n    historyId: 0,\r\n    testTime: new Date().toLocaleString(),\r\n    save: async () => {\r\n      info.updated = false;\r\n      info.askStay = false;\r\n      info.giveup = false;\r\n      projectStore.saveProject(project);\r\n      dispatcher.dispatch(projectSavedEvent, project);\r\n      const s = await loadI18nValue('droid-project/project/manager/content', 'edit-project-info-utils.projectSaved');\r\n      toast.success(s);\r\n    },\r\n  });\r\n  return info;\r\n}\r\n","import { createContext } from \"react\";\r\nimport { IProjectEditInfo } from \"../../..\";\r\nimport { IActionData, IActionGroup, IActionJavaData, IActionShellData, ITriggerAction, ITriggerActionGroup, ITriggerData, ITriggerGroup, ITriggerJavaData, ITriggerShellData } from \"@droid/project-interface\";\r\n\r\nexport const ProjectEditInfoContext = createContext<IProjectEditInfo>({} as IProjectEditInfo)\r\n\r\n// export const TriggerActionGroupContext = createContext<ITriggerActionGroup>({} as ITriggerActionGroup)\r\n\r\n// export const TriggerActionContext = createContext<ITriggerAction>({} as ITriggerAction)\r\n\r\n// export const TriggerGroupContext = createContext<ITriggerGroup>({} as ITriggerGroup)\r\n\r\n// export const TriggerListContext = createContext<ITriggerData<ITriggerShellData, ITriggerJavaData>[]>([] as ITriggerData<ITriggerShellData, ITriggerJavaData>[])\r\n\r\n// export const TriggerContext = createContext<ITriggerData<ITriggerShellData, ITriggerJavaData>>({} as ITriggerData<ITriggerShellData, ITriggerJavaData>)\r\n\r\n// export const ActionGroupContext = createContext<IActionGroup>({} as IActionGroup)\r\n\r\n// export const ActionListContext = createContext<IActionData<IActionShellData, IActionJavaData>[]>([] as IActionData<IActionShellData, IActionJavaData>[])\r\n\r\n// export const ActionContext = createContext<IActionData<IActionShellData, IActionJavaData>>({} as IActionData<IActionShellData, IActionJavaData>)","import { useEffect, useState } from \"react\"\r\nimport { getProxyDispatcher } from \".\"\r\nimport { listenAnyWildcard } from \"../dispatcher/throttle\"\r\n\r\nexport function useWatchListOperation<T>(target:T[]):[T[], ()=>void]{\r\n    const [list, setList] = useState<T[]>([...target])\r\n    const unsub = getProxyDispatcher(target).addListener(listenAnyWildcard, ()=>{\r\n        setList([...target])\r\n    })\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            unsub()\r\n        }\r\n    }, [])\r\n    return [list, unsub]\r\n}\r\n","import { listenAnyWildcard } from \"../dispatcher\"\r\nimport { getProxyDispatcher, toProxy } from \"./proxyWatch\"\r\nlet count = 0\r\nexport interface IUpdateVersion{\r\n    // 它来自于全局count，所以这个数值最终是全局唯一的\r\n    version:number\r\n    // 这是当前这个对象更新过的次数\r\n    count:number\r\n    // 最终组合的key，用于唯一标识\r\n    key:string\r\n}\r\nconst map = new WeakMap<object, IUpdateVersion>()\r\n/**\r\n * @prefix 如果有用于调试等的需求，可以用prefix作为识别，但是一般来说用不上.\r\n */\r\nexport function getUpdateVersion<T extends object>(data:T, prefix:string = ''):IUpdateVersion{\r\n    let version = map.get(data) || toProxy({\r\n        version:++count,\r\n        count:0,\r\n        key:`${prefix}${count}-0`\r\n    })\r\n    if(!map.has(data)){\r\n        map.set(data, version)\r\n        const dispatcher = getProxyDispatcher(data)\r\n        dispatcher.addListener(listenAnyWildcard, (now, old)=>{\r\n            version.count++\r\n            version.version = ++count\r\n            // 特定前缀+全局唯一数值+该对象更新次数\r\n            version.key = `${prefix}${version.version}-${version.count}`\r\n        })\r\n    }\r\n    return version\r\n}\r\n\r\nexport function getUpdateVersionKey<T extends object>(data:T):string{\r\n    return getUpdateVersion(data).key\r\n}\r\n\r\n\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"m21.67 18.17-5.3-5.3h-.99l-2.54 2.54v.99l5.3 5.3c.39.39 1.02.39 1.41 0l2.12-2.12c.39-.38.39-1.02 0-1.41\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"m17.34 10.19 1.41-1.41 2.12 2.12c1.17-1.17 1.17-3.07 0-4.24l-3.54-3.54-1.41 1.41V1.71l-.7-.71-3.54 3.54.71.71h2.83l-1.41 1.41 1.06 1.06-2.89 2.89-4.13-4.13V5.06L4.83 2.04 2 4.87 5.03 7.9h1.41l4.13 4.13-.85.85H7.6l-5.3 5.3c-.39.39-.39 1.02 0 1.41l2.12 2.12c.39.39 1.02.39 1.41 0l5.3-5.3v-2.12l5.15-5.15z\"\n}, \"1\")], 'Handyman');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2m6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5z\"\n}), 'NotificationsNone');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21 8H3V4h18zm0 2H3v4h18zm0 6H3v4h18z\"\n}), 'TableRows');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM8 9h8v10H8zm7.5-5-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteOutline');","import { actionGroupType, childToProjectDataUtils, getActionGroupElement, GroupCheckList1, GroupCheckList1Context, GroupCheckList2, IActionGroup, IChildToProjectData, IGroup, ITriggerActionGroup, ITriggerGroup, triggerActionGroupType, triggerGroupType } from '@droid/project-interface';\r\nimport {\r\n  ButtonConfirm,\r\n  getParent,\r\n  getUpdateVersionKey,\r\n  Log,\r\n  objectCountUtils,\r\n  useProxyWatch,\r\n  useWatchUpdates\r\n} from '@fanfanlo';\r\nimport { Box, Button, Checkbox, FormControlLabel, FormGroup, Grid2, IconButton } from '@mui/material';\r\nimport { useContext, useEffect } from 'react';\r\n\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\n\r\nfunction getProjectDataByGroup(group:IGroup<any>){\r\n    let projectData:IChildToProjectData = {}\r\n    switch(group.type){\r\n        case actionGroupType:\r\n            getActionGroupElement(group as IActionGroup,'', '', projectData)\r\n            break;\r\n        case triggerGroupType:\r\n          childToProjectDataUtils.triggerGroup.getTriggerGroupElement(group as ITriggerGroup,'', '', projectData)\r\n            break;\r\n        case triggerActionGroupType:\r\n          childToProjectDataUtils.triggerActionGroup.getTriggerActionGroupElement(group as ITriggerActionGroup,'', '', projectData)\r\n            break;\r\n    }\r\n    return projectData\r\n}\r\nfunction Check2({ list, index }: { list: GroupCheckList2; index: number }) {\r\n  const logger = new Log(false, 'Check2_fn');\r\n  logger.isPaused = true\r\n  logger.log('list=', list)\r\n  const [l] = useWatchUpdates(list);\r\n  const groupCheckList1Context = useContext(GroupCheckList1Context);\r\n  function onRemoveClick() {\r\n    groupCheckList1Context.splice(index, 1);\r\n  }\r\n  logger.log('l=', l)\r\n  // const check1 = getParent<GroupCheckList1>(list)\r\n  // console.log('check1=', check1)\r\n  // const group = getParent<IGroup<any>>(check1!)!\r\n  // console.log('group=', group)\r\n  // const projectData = getProjectDataByGroup(group)\r\n  // console.log('projectData=', projectData)\r\n  // const globalId = `project`\r\n  return (\r\n    <>\r\n      <Grid2 container>\r\n        <Grid2 container size={'grow'}>\r\n          {l.map((check, index) => (\r\n            <Grid2 key={objectCountUtils.getNewCountId().toString()}>\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  label={index.toString()}\r\n                  control={\r\n                    <Checkbox\r\n                    data-id=\"group-check-checkbox\"\r\n                      data-checked={check}\r\n                      data-value={check}\r\n                      checked={check}\r\n                      onChange={e => {\r\n                        list[index] = e.target.checked;\r\n                      }}\r\n                    />\r\n                  }\r\n                />\r\n              </FormGroup>\r\n            </Grid2>\r\n          ))}\r\n        </Grid2>\r\n        <Grid2>\r\n          <ButtonConfirm title=\"提醒\" onConfirm={onRemoveClick} content=\"您要删除此条校验吗？\">\r\n            <IconButton data-id=\"group-check-remove\" >\r\n              <DeleteOutlineIcon />\r\n            </IconButton>\r\n          </ButtonConfirm>\r\n        </Grid2>\r\n      </Grid2>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Check1({ list }: { list: GroupCheckList1 }) {\r\n  const logger = new Log(false, 'Check1_fn');\r\n  logger.isPaused = true\r\n  logger.log('Check1 list=', list);\r\n\r\n  return (\r\n    <GroupCheckList1Context.Provider value={list}>\r\n      {list.map((checks2, index) => (\r\n        <Check2 key={getUpdateVersionKey(checks2)} list={list[index]} index={index} />\r\n      ))}\r\n    </GroupCheckList1Context.Provider>\r\n  );\r\n}\r\nexport function GroupCheck({ group }: { group: IGroup<any> }) {\r\n  const logger = new Log(false, 'GroupCheck_fn');\r\n  logger.isPaused = true;\r\n  const [isSequential] = useProxyWatch(group, 'isSequential', group.isSequential);\r\n  const [l] = useProxyWatch(group, 'list', group.list);\r\n  const [list] = useWatchUpdates(l);\r\n  const [listSize] = useProxyWatch(list, 'length', list.length);\r\n  const [c] = useProxyWatch(group, 'checks', group.checks);\r\n  const [checks1] = useWatchUpdates(c);\r\n  function updateChecks2(){\r\n    logger.log('updateChecks2_fn', 'listSize=', listSize, group.checks);\r\n    group.checks.forEach(checks2 => {\r\n      logger.log('updateChecks2_fn', 'checks2=', checks2);\r\n      for (let i = checks2.length; i < listSize; i++) {\r\n        checks2.push(true);\r\n      }\r\n      checks2.length = listSize;\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    updateChecks2();\r\n  }, [listSize]);\r\n  // logger.log('group=', group);\r\n  // logger.log('checks1=', checks1);\r\n  // logger.log('isSequential=', isSequential);\r\n  logger.log('list.length=', list.length);\r\n  if (list.length <= 1 || isSequential) return <></>;\r\n  return (\r\n    <Box>\r\n      <Grid2 container>\r\n        <Grid2>\r\n          <Button\r\n            data-id=\"group-add-check-list.875aec4f-5049-426a-a395-0ac0c6666a35\"\r\n            onClick={() => {\r\n              group.checks.push(new Array(listSize).fill(true));\r\n            }}>\r\n            添加校验组\r\n          </Button>\r\n        </Grid2>\r\n      </Grid2>\r\n      <Check1 list={group.checks} />\r\n    </Box>\r\n  );\r\n}\r\n","import { IActionOrTriggerListPageParams } from \"@app/static\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useRouter } from \"next/router\";\r\nimport { PropsWithChildren } from \"react\";\r\nexport interface IActionListOrTriggerListPageLinkProps extends PropsWithChildren{\r\n  query:IActionOrTriggerListPageParams\r\n  attrs:object\r\n  path:'/action-list'|'/trigger-list'\r\n  btnId:string\r\n}\r\nexport function ActionListOrTriggerListPageLink({query, attrs, path, btnId, children}:IActionListOrTriggerListPageLinkProps){\r\n  const router = useRouter();\r\n  query.backPath = router.pathname\r\n  function handleClick(){\r\n    const list = Object.keys(query).map(key=> [key, query[key]!!.toString()])\r\n    const q = new URLSearchParams(list);\r\n    const href = `${path}?${q.toString()}`\r\n    router.push(href)\r\n  }\r\n  \r\n  return (\r\n    <Button onClick={handleClick} \r\n    {...attrs}\r\n    // id=\"link-router-to-action-list\"\r\n    // data-id=\"link-router-to-action-list\"\r\n    id={btnId}\r\n    data-id={btnId}\r\n    >{children}</Button>\r\n  )\r\n}","import { ActionListContext, IActionData } from \"@droid/project-interface\"\r\nimport { ActionUtilsMap } from \"@droid/project-interface\"\r\nimport { Box, Button } from \"node_modules/@mui/material\"\r\nimport {ButtonConfirm, getParent, toProxy} from \"@fanfanlo\"\r\nimport { useContext } from \"react\"\r\nexport function Action({actionData}:{actionData:IActionData<any,any>}){\r\n    const list = useContext(ActionListContext)\r\n    const utils = ActionUtilsMap[actionData.type]\r\n    function onDeleteComfirmed(){\r\n        const index = list.indexOf(actionData)\r\n        if(index === -1)return\r\n        list.splice(index, 1)\r\n    }\r\n    return <Box sx={{\r\n        position: 'relative',\r\n        padding: '2px',\r\n        marginTop:\"2px\",\r\n        marginBottom:\"2px\",\r\n        '&::after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            right: 0,\r\n            top: '5px',\r\n            bottom: '5px',\r\n            borderRight: '1px solid red',\r\n        },\r\n        '&::before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            left: 0,\r\n            top: '5px',\r\n            bottom: '5px',\r\n            borderLeft: '1px solid red',\r\n        }\r\n    }}>\r\n        {utils.UI(actionData)}\r\n        <Box sx={{textAlign:\"center\"}}>\r\n            \r\n        <ButtonConfirm title=\"删除动作\" content=\"确定删除本动作吗？\" onConfirm={onDeleteComfirmed}>\r\n                <Button \r\n                id=\"del-action-btn\"\r\n                data-id=\"del-action-btn\"\r\n                >删除</Button>\r\n            </ButtonConfirm>\r\n        </Box>\r\n    </Box>\r\n}\r\n","import { getUpdateVersionKey, useWatchUpdates } from \"@fanfanlo\"\r\nimport { useContext } from \"react\"\r\n// import { ActionGroupContext } from \"../../../../contexts\"\r\nimport { Action } from \"./action/Action\"\r\nimport { ActionGroupContext } from \"@droid/project-interface\"\r\nimport _ from \"lodash\"\r\nexport function ActionList(){\r\n    const actionGroup = useContext(ActionGroupContext)\r\n    const [list] = useWatchUpdates(actionGroup.list)\r\n    if(!list || !_.isArray(list)){\r\n        console.log('lllllllllllllist is null', actionGroup)\r\n    }\r\n    return <div>\r\n        {actionGroup.list.map(action=>{\r\n            return <Action key={getUpdateVersionKey(action)} actionData={action} />\r\n        })}\r\n    </div>\r\n}\r\n","import { ActionOrTriggerListTypeEnum, IActionOrTriggerListPageParams } from \"@app/static\";\r\nimport { ActionGroupContext, ActionListContext, getActionGroupElement, IActionGroup, TriggerActionContext, TriggerActionGroupContext } from \"@droid/project-interface\";\r\nimport { toProxy, useProxyWatch } from \"@fanfanlo\";\r\nimport { Box, FormControlLabel, FormGroup, Grid2, Switch } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { GroupCheck } from \"../../../components/group/GroupCheck\";\r\nimport { ActionListOrTriggerListPageLink } from \"../../../components/list-page-link/ActionListOrTriggerListPageLink\";\r\nimport { ProjectEditInfoContext } from \"../../../contexts\";\r\nimport { ActionList } from \"./action-list/ActionList\";\r\nimport { useTranslation } from \"@fanfanlo\";\r\nexport function ActionGroup({ actionGroup }: { actionGroup: IActionGroup }) {\r\n    const {t} = useTranslation(\"droid-project/project/ui/project/edit-project/trigger-action-group/trigger-action/action-group/content\")\r\n    const editInfo = useContext(ProjectEditInfoContext)\r\n    const triggerActionGroup = useContext(TriggerActionGroupContext)\r\n    const triggerAction = useContext(TriggerActionContext)\r\n\r\n    const query: IActionOrTriggerListPageParams = {\r\n        projectId: editInfo.project.id,\r\n        triggerActionGroupId: triggerActionGroup.id,\r\n        triggerActionId: triggerAction.id,\r\n        actionGroupId: actionGroup.id,\r\n        type: ActionOrTriggerListTypeEnum.addAction,\r\n        actionType: '',\r\n    }\r\n    const [isSequential] = useProxyWatch(actionGroup, 'isSequential', actionGroup.isSequential)\r\n    const [listSize] = useProxyWatch(actionGroup.list, 'length', actionGroup.list.length)\r\n    function setIsSequential(value: boolean) {\r\n        toProxy(actionGroup).isSequential = value\r\n    }\r\n    return (\r\n        <ActionGroupContext.Provider value={actionGroup}>\r\n            <ActionListContext.Provider value={actionGroup.list}>\r\n\r\n                <Box sx={{ border: '2px solid #ccc', padding: '4px' }}>\r\n                    <Grid2 container sx={{ alignItems: 'center' }}>\r\n                        <Grid2 size={\"grow\"}>\r\n                            <Box>{t(\"content.title\")}</Box>\r\n                        </Grid2>\r\n                        <Grid2>\r\n                            {listSize > 1 && <FormGroup>\r\n                                <FormControlLabel control={<Switch checked={isSequential} \r\n                                data-id=\"action-group-checkbox-is-sequential.122f\"\r\n                                aria-checked={isSequential}\r\n                                data-checked={isSequential}\r\n                                onChange={(e) => { setIsSequential(e.target.checked) }} />} label={t(\"content.sequential\")} />\r\n                            </FormGroup>}\r\n                        </Grid2>\r\n                        <Grid2>\r\n                            <Box>\r\n                                <ActionListOrTriggerListPageLink query={query} attrs={getActionGroupElement(actionGroup)} path=\"/action-list\" btnId=\"link-router-to-action-list\" children={t(\"content.list\")} />\r\n                            </Box>\r\n                        </Grid2>\r\n                    </Grid2>\r\n                    <GroupCheck group={actionGroup} />\r\n                    <ActionList />\r\n                </Box>\r\n            </ActionListContext.Provider>\r\n        </ActionGroupContext.Provider>\r\n    )\r\n}\r\n\r\n","import { ITriggerJavaData, ITriggerShellData, TriggerContext } from \"@droid/project-interface\";\r\nimport { ITriggerData } from \"@droid/project-interface\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport { getTriggerUtils } from \"@droid/project-interface\";\r\nimport { getParent, toProxy, ButtonConfirm } from \"@fanfanlo\";\r\nimport { useContext } from \"react\";\r\nimport { TriggerListContext } from \"@droid/project-interface\";\r\nexport function Trigger({triggerData}:{triggerData:ITriggerData<ITriggerShellData, ITriggerJavaData>}){\r\n    const list = useContext(TriggerListContext)\r\n    const utils = getTriggerUtils(triggerData.type)\r\n    const onDeleteComfirmed = () => {\r\n        const index = list.indexOf(toProxy(triggerData))\r\n        if(index === -1) return\r\n        toProxy(list).splice(index, 1)\r\n    }\r\n    return (\r\n        <TriggerContext.Provider value={triggerData}>\r\n            <Box>\r\n                {utils.UI(triggerData)}\r\n                <Box sx={{textAlign:\"center\"}}>\r\n                    <ButtonConfirm title=\"删除触发\" content=\"确定删除本触发吗？\" onConfirm={onDeleteComfirmed}>\r\n                        <Button \r\n                        id=\"del-trigger-btn\"\r\n                        data-id=\"del-trigger-btn\"\r\n                        >删除</Button>\r\n                    </ButtonConfirm>\r\n                </Box>\r\n            </Box>\r\n        </TriggerContext.Provider>\r\n    )\r\n}\r\n\r\n    \r\n","import { ITriggerData, ITriggerJavaData, ITriggerShellData, TriggerListContext, TriggerGroupContext } from \"@droid/project-interface\"\r\nimport { Box } from \"@mui/material\"\r\nimport { getUpdateVersion, useWatchUpdates } from \"@fanfanlo\"\r\nimport { Trigger } from \"./trigger/Trigger\"\r\nimport { useContext, useEffect } from \"react\"\r\nexport function TriggerList(){\r\n    const triggerGroup = useContext(TriggerGroupContext)\r\n    const [l] = useWatchUpdates<ITriggerData<ITriggerShellData, ITriggerJavaData>[]>(triggerGroup.list)\r\n    // useEffect(()=>{\r\n    //     console.log('llllllllllllllllllllllll', l)\r\n    //     console.log('triggerGroupppppppppp', triggerGroup)\r\n    // }, [l])\r\n    return (\r\n        <TriggerListContext.Provider value={triggerGroup.list}>\r\n            <Box>\r\n                {triggerGroup.list.map((trigger) => (\r\n                    <Trigger key={getUpdateVersion(trigger).version} triggerData={trigger} />\r\n                ))}\r\n            </Box>\r\n        </TriggerListContext.Provider>\r\n    )\r\n}\r\n\r\n","import { ActionOrTriggerListTypeEnum, IActionOrTriggerListPageParams } from \"@app/static\";\r\nimport { ITriggerGroup, TriggerActionContext, TriggerActionGroupContext, TriggerGroupContext, childToProjectDataUtils } from \"@droid/project-interface\";\r\nimport { useTranslation } from \"@fanfanlo\";\r\nimport { Box, FormControlLabel, FormGroup, Grid2, Switch } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { ActionListOrTriggerListPageLink } from \"../../../components/list-page-link/ActionListOrTriggerListPageLink\";\r\nimport { ProjectEditInfoContext } from \"../../../contexts\";\r\nimport { TriggerList } from \"./trigger-list/TriggerList\";\r\nimport { toProxy, useProxyWatch } from \"@fanfanlo\";\r\nimport { GroupCheck } from \"../../../components/group/GroupCheck\";\r\nexport function TriggerGroup({ triggerGroup }: { triggerGroup: ITriggerGroup }) {\r\n    const {t} = useTranslation(\"droid-project/project/ui/project/edit-project/trigger-action-group/trigger-action/trigger-group/content\")\r\n    \r\n    const editInfo = useContext(ProjectEditInfoContext)\r\n    const triggerActionGroup = useContext(TriggerActionGroupContext)\r\n    const triggerAction = useContext(TriggerActionContext)\r\n    \r\n    const query: IActionOrTriggerListPageParams = {\r\n        projectId: editInfo.project.id,\r\n        triggerActionGroupId: triggerActionGroup.id,\r\n        triggerActionId: triggerAction.id,\r\n        triggerGroupId: triggerGroup.id,\r\n        type: ActionOrTriggerListTypeEnum.addAction,\r\n        actionType: '',\r\n    }\r\n\r\n    const [isSequential] = useProxyWatch(triggerGroup, 'isSequential', triggerGroup.isSequential)\r\n    const [listSize] = useProxyWatch(triggerGroup.list, 'length', triggerGroup.list.length)\r\n    function setIsSequential(value: boolean) {\r\n        toProxy(triggerGroup).isSequential = value\r\n    }\r\n    return (\r\n        <TriggerGroupContext.Provider value={triggerGroup}>\r\n            <Box sx={{ border: '2px solid #a4a737', padding: '4px', marginBottom: \"2px\", marginTop: \"2px\" }}>\r\n                <Grid2 container sx={{ alignItems: 'center' }}>\r\n                    <Grid2 size={\"grow\"}>\r\n                        <Box>{t(\"content.title\")}</Box>\r\n                    </Grid2>\r\n                        <Grid2>\r\n                            {listSize > 1 && <FormGroup>\r\n                                <FormControlLabel control={<Switch checked={isSequential} \r\n                                data-id=\"trigger-group-checkbox-is-sequential.122f\"\r\n                                aria-checked={isSequential}\r\n                                data-checked={isSequential}\r\n                                onChange={(e) => { setIsSequential(e.target.checked) }} />} label={t(\"content.sequential\")} />\r\n                            </FormGroup>}\r\n                        </Grid2>\r\n                    <Grid2>\r\n                        <Box>\r\n                            <ActionListOrTriggerListPageLink query={query} attrs={childToProjectDataUtils.triggerGroup.getTriggerGroupElement(triggerGroup)} path=\"/trigger-list\" btnId=\"link-router-to-trigger-list\" children={t(\"content.list\")} />\r\n\r\n                        </Box>\r\n                    </Grid2>\r\n                </Grid2>\r\n                <GroupCheck group={triggerGroup} />\r\n                <TriggerList/>\r\n            </Box>\r\n        </TriggerGroupContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n","import { ITriggerAction, TriggerActionContext } from \"@droid/project-interface\";\r\nimport { EditableText, getParentWatchProxy } from \"@fanfanlo\";\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport HandymanIcon from '@mui/icons-material/Handyman';\r\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone';\r\nimport { Box, Grid2, IconButton } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { ActionGroup } from \"./action-group/ActionGroup\";\r\nimport { TriggerGroup } from \"./trigger-group/TriggerGroup\";\r\n\r\nimport { ButtonConfirm } from \"@fanfanlo\";\r\nexport function TriggerAction({ triggerAction }: { triggerAction: ITriggerAction }) {\r\n    const [name, setName] = useState(triggerAction.name || '未命名')\r\n    function handleNameChange(name: string) {\r\n        triggerAction.name = name\r\n        setName(name)\r\n    }\r\n    function handleDelete() {\r\n        const parent = getParentWatchProxy<ITriggerAction[]>(triggerAction)\r\n        if(!parent) return\r\n        parent.splice(parent.indexOf(triggerAction), 1)\r\n    }\r\n    return (\r\n        <TriggerActionContext.Provider value={triggerAction}>\r\n            <Box sx={{ border: '2px solid #02450e', padding: '4px' }}\r\n            data-id-trigger-action={triggerAction.id}\r\n            >\r\n                <Grid2 sx={{ alignItems: 'center' }} container>\r\n                    <Grid2>\r\n                        <NotificationsNoneIcon />\r\n                        <HandymanIcon />\r\n                    </Grid2>\r\n                    <Grid2 size={\"grow\"}>\r\n                        <EditableText setText={handleNameChange} >\r\n                            <span\r\n                            data-id=\"rename-trigger-action-btn.a4c6\"\r\n                            >{name}</span>\r\n                        </EditableText>\r\n                    </Grid2>\r\n                    <Grid2>\r\n                        <ButtonConfirm title=\"提示\" content=\"确认要删除这条触发器和动作吗\" onConfirm={handleDelete}>\r\n                            <IconButton\r\n                            data-id=\"del-trigger-action-btn\"\r\n                            >\r\n                                <DeleteOutlineIcon />\r\n                            </IconButton>\r\n                        </ButtonConfirm>\r\n                    </Grid2>\r\n                </Grid2>\r\n                <TriggerGroup triggerGroup={triggerAction.triggerGroup} />\r\n                <ActionGroup actionGroup={triggerAction.actionGroup} />\r\n            </Box>\r\n        </TriggerActionContext.Provider>\r\n    )\r\n}\r\n\r\n","import { childToProjectDataUtils, createDefultTriggerAction, TriggerActionGroupContext } from \"@droid/project-interface\"\r\nimport { EditableText, getUpdateVersion, toParent, useWatchListOperation, } from \"@fanfanlo\"\r\nimport AddIcon from '@mui/icons-material/Add'\r\nimport HandymanIcon from '@mui/icons-material/Handyman'\r\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone'\r\nimport TableRowsIcon from '@mui/icons-material/TableRows'\r\nimport { Box, Grid2, IconButton } from \"@mui/material\"\r\nimport { useContext, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { ProjectEditInfoContext } from \"../contexts\"\r\nimport { TriggerAction } from \"./trigger-action/TriggerAction\"\r\nexport function TriggerActionGroup() {\r\n    const { t } = useTranslation('droid-project/project/ui/project/edit-project/trigger-action-group/content')\r\n    const editInfo = useContext(ProjectEditInfoContext)\r\n    const [groupName, setGroupName] = useState(editInfo.project.triggerActionGroup.name || t('TriggerActionGroup.unamed'))\r\n\r\n    const [list] = useWatchListOperation(editInfo.project.triggerActionGroup.list)\r\n    function handleGroupNameChange(name: string) {\r\n        editInfo.project.triggerActionGroup.name = name\r\n        setGroupName(name || t('TriggerActionGroup.unamed'))\r\n    }\r\n    const triggerActionGroup = editInfo.project.triggerActionGroup\r\n    function addTriggerAction() {\r\n        const newTriggerAction = createDefultTriggerAction()\r\n        toParent(triggerActionGroup).list.push(newTriggerAction)\r\n    }\r\n    return (\r\n        <TriggerActionGroupContext.Provider value={triggerActionGroup}>\r\n            <Box sx={{ border: '2px solid rgb(217, 217, 217)', padding: '4px' }}\r\n            {...childToProjectDataUtils.triggerActionGroup.getTriggerActionGroupElementByProp(triggerActionGroup.list)}\r\n            data-id-trigger-action-group={triggerActionGroup.id}>\r\n                <Grid2 container sx={{ alignItems: 'center' }}>\r\n                    <Grid2 container sx={{ alignItems: 'center' }}>\r\n                        <NotificationsNoneIcon />\r\n                        <HandymanIcon />\r\n                        <TableRowsIcon />\r\n                    </Grid2>\r\n                    <Grid2 size={\"grow\"} sx={{ alignItems: 'center', width: \"100%\" }}>\r\n\r\n                        <Box sx={{ width: \"100%\" }}>\r\n                            <EditableText setText={handleGroupNameChange} >\r\n                                <span\r\n                                data-id=\"rename-groupname-btn-a322\" style={{ backgroundColor: 'red' }}>{groupName}</span>\r\n                            </EditableText>\r\n                        </Box>\r\n                    </Grid2>\r\n                    <Grid2>\r\n                        <Box>\r\n                            <IconButton\r\n                            data-id=\"add-trigger-action-btn.22fab779-75e2-4e34-82f4-64667e7fc017\"\r\n                             onClick={addTriggerAction}>\r\n                                <AddIcon />\r\n                            </IconButton>\r\n                        </Box>\r\n                    </Grid2>\r\n                </Grid2>\r\n                <Box>\r\n                    {list.map((ta, index) => {\r\n                        const triggerAction = triggerActionGroup.list[index]\r\n                        return <TriggerAction key={getUpdateVersion(triggerAction).version}\r\n                        triggerAction={triggerAction} />\r\n                    })}\r\n                </Box>\r\n            </Box>\r\n        </TriggerActionGroupContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3m3-10H5V5h10z\"\n}), 'Save');","import { IJsBridgeEventMap, jsBridgeDispatcher } from \"@droid/android\"\r\nimport { mergeProjectDataToDefultData, ProjectContext, projectStore } from \"@droid/project-interface\"\r\nimport { Dispatcher, EditableText, getParentProxyTarget, IDispatchEvent, Log, objectCountUtils, toParent, toProxy, useProxyWatch, watchUpdates } from \"@fanfanlo\"\r\nimport CloseIcon from '@mui/icons-material/Close'\r\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Paper, styled } from \"@mui/material\"\r\nimport { useRouter } from \"next/router\"\r\n\r\nimport { useContext, useEffect } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { takeProjectSnapshoot } from \"../../../../history/projectsHistoryMap\"\r\nimport { editProjectInfoUtils } from \"../../../manager/edit-project-info-utils\"\r\nimport { ProjectEditInfoContext } from \"./contexts\"\r\nimport { TriggerActionGroup } from \"./trigger-action-group/TriggerActionGroup\"\r\n\r\nimport SaveIcon from '@mui/icons-material/Save'\r\nimport _ from \"lodash\"\r\n// import { IAppBarBackAskEvent } from \"@app/static\"\r\n\r\ninterface IAppBarBackAskEvent{\r\n    defaultPrevented:boolean\r\n}\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n        padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction ProjectContent() {\r\n    const project = useContext(ProjectContext)\r\n    return <Box\r\n    data-id-project={project.id}>\r\n        <Paper>\r\n            <TriggerActionGroup />\r\n        </Paper>\r\n    </Box>\r\n}\r\n\r\nfunction StayAlert() {\r\n    const editInfo = useContext(ProjectEditInfoContext)\r\n    const logger = Log.createCountedLogger(false, 'project-editor-effect')\r\n    const [askStay] = useProxyWatch(editInfo, 'askStay', editInfo.askStay)\r\n    const router = useRouter()\r\n\r\n    function toLeave() {\r\n        editInfo.askStay = false\r\n        editInfo.giveup = true\r\n        router.back()\r\n        editInfo.giveup = false\r\n        editInfo.updated = false\r\n    }\r\n    function handleClose() {    \r\n        editInfo.askStay = false\r\n    }\r\n    function handleLeaveWithoutSave() {\r\n        toLeave()\r\n        projectStore.deleteDraft(editInfo.project.id)\r\n    }\r\n    function handleSaveAndLeave() {\r\n        editInfo.save()\r\n        toLeave()\r\n        projectStore.deleteDraft(editInfo.project.id)\r\n    }\r\n    function handleStayAndEdit() {\r\n        editInfo.askStay = false\r\n        editInfo.giveup = false\r\n        logger.log('handleStayAndEdit fn called ', 'objectCount=', objectCountUtils.getObjectCount(editInfo), 'editInfo=', editInfo)\r\n    }\r\n\r\n    function handleSaveToDraftAndLeave() {\r\n        // projectStore.save\r\n        projectStore.addDraft(editInfo.project)\r\n        toLeave()\r\n    }\r\n\r\n    return <Box>\r\n        <BootstrapDialog\r\n            onClose={handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={askStay}\r\n        >\r\n            <DialogTitle sx={{ m: 0, p: 2 }} id=\"customized-dialog-title\">\r\n                提示:您有更改没有保存，确定要离开吗？\r\n            </DialogTitle>\r\n            <IconButton\r\n                aria-label=\"close\"\r\n                onClick={handleClose}\r\n                sx={(theme) => ({\r\n                    position: 'absolute',\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: theme.palette.grey[500],\r\n                })}\r\n            >\r\n                <CloseIcon />\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleLeaveWithoutSave}>放弃保存并离开</Button>\r\n                <Button onClick={handleSaveToDraftAndLeave}>保存变更到草稿并离开</Button>\r\n                <Button onClick={handleSaveAndLeave}>保存并离开</Button>\r\n                <Button onClick={handleStayAndEdit}>留下编辑</Button>\r\n            </DialogActions>\r\n        </BootstrapDialog>\r\n    </Box>\r\n}\r\nfunction ProjectTools(){\r\n    const {t} = useTranslation('droid-project/project/ui/project/edit-project/content')\r\n    function onRunClick(){\r\n\r\n    }\r\n    return(\r\n        <>\r\n            <Box>\r\n                <Button onClick={onRunClick}>{t(\"content.projectTools.run\")}</Button>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\nexport function EditProjectBuilder() {\r\n    const dispatcher = new Dispatcher()\r\n    const router = useRouter()\r\n    const { id } = router.query\r\n    let project = projectStore.findDraftOrSavedProject((id || '-1') as string) || mergeProjectDataToDefultData({ id: (id || '-1') as string })\r\n    const createProject = project\r\n    const draftPorjct = project = projectStore.addDraft(createProject)\r\n    const proxyProject = project = toProxy(draftPorjct)\r\n    const parentProject = project = toParent(proxyProject)\r\n    const editInfo = editProjectInfoUtils.edit(parentProject)\r\n    type NeedStay = boolean\r\n    function checkUpdated():NeedStay{\r\n        const logger = new Log(false, 'checkUpdated_fn')\r\n        logger.isPaused = true\r\n        const c = projectStore.findSavedProject(project.id)\r\n        logger.log('checkUpdated fn called',  'c=', c)\r\n        editInfo.updated = !c || !_.isEqual(c, project)\r\n        logger.log('editInfo.updated=', editInfo.updated)\r\n        if(editInfo.updated && !editInfo.giveup){\r\n            editInfo.askStay = true\r\n            logger.log('checkUpdated fn called',  'editInfo.askStay=', editInfo.askStay)\r\n            return true\r\n        }\r\n        logger.log('checkUpdated fn called2',  'editInfo.askStay=', editInfo.askStay)\r\n        return false\r\n    }\r\n    function Content() {\r\n        useEffect(() => {\r\n            takeProjectSnapshoot(project)\r\n            if (!project) return\r\n            const unsub = watchUpdates(getParentProxyTarget(project), () => {\r\n                takeProjectSnapshoot(project)\r\n                editInfo.updated = true\r\n                // console.log('project updated2', project)\r\n            })\r\n            return () => {\r\n                unsub()\r\n            }\r\n        }, [])\r\n        useEffect(() => {\r\n            const unsub = jsBridgeDispatcher.addListener<IJsBridgeEventMap>(\"checkBrowserCanBack\", (event: IDispatchEvent) => {\r\n                const canBack = event.result = checkUpdated()\r\n                console.log('ooooooooooooooooooooooooo checkBrowserCanBack_fn', event, 'canback=', canBack)\r\n                if(canBack)projectStore.deleteDraft(project.id)\r\n            })\r\n            return () => {\r\n                unsub()\r\n            }\r\n        }, [])\r\n\r\n        useEffect(()=>{\r\n            return dispatcher.addListener('back', (e:IAppBarBackAskEvent)=>{\r\n                const canBack = e.defaultPrevented = checkUpdated()\r\n                if(canBack)projectStore.deleteDraft(project.id)\r\n            })\r\n        },[])\r\n        const p = toProxy(editInfo.project)\r\n        return (\r\n            <ProjectEditInfoContext.Provider value={editInfo}>\r\n                <ProjectContext.Provider value={p}>\r\n                    <Box sx={{width:\"100%\"}}>\r\n                        <ProjectTools />\r\n                        <ProjectContent />\r\n                        <StayAlert />\r\n                    </Box>\r\n                </ProjectContext.Provider>\r\n            </ProjectEditInfoContext.Provider>\r\n        )\r\n    }\r\n\r\n    function Title() {\r\n        const { t } = useTranslation('droid-project/project/ui/project/edit-project/content')\r\n        const clickToSetProjectName = t('content.clickToSetProjectName')\r\n        const [name] = useProxyWatch(project, 'name', clickToSetProjectName)\r\n        function setName(name: string) {\r\n            project.name = name\r\n        }\r\n        return (<div style={{ display: 'flex', flexDirection: 'row', gap: 16, width: \"100%\", alignItems: \"center\" }}>\r\n            <span style={{ flexGrow: 1, paddingLeft: \"2rem\" }}>\r\n                <EditableText setText={setName} >\r\n                    <h2><span\r\n                    id=\"project-name-editor\"\r\n                    data-id=\"project-name-editor\" \r\n                    >\r\n                        {name || clickToSetProjectName}\r\n                    </span></h2>\r\n                </EditableText>\r\n            </span>\r\n            <IconButton onClick={() => { editInfo.save(); }}>\r\n                <SaveIcon />\r\n            </IconButton>\r\n        </div>\r\n        )\r\n    }\r\n    return { Content, Title, dispatcher }\r\n}","import { EditProjectBuilder } from \"@droid/project\"\r\nimport { AppbarContainer, AppShell, IAppbarProps } from \"@app/ui\"\r\nimport { initActionListGroups } from \"@src/components/page/action-list/action.data\"\r\nimport { initTriggerListGroups } from \"@src/components/page/trigger-list/trigger.data\"\r\n\r\n\r\n\r\nexport default function ProjectEditor(){\r\n    const {Content, Title, dispatcher} = EditProjectBuilder()\r\n    initActionListGroups()\r\n    initTriggerListGroups(  )\r\n    const appBarProps:IAppbarProps = {\r\n        title:<Title/>,\r\n        back:true,\r\n        backDispatcher:dispatcher\r\n    }\r\n    return (\r\n        <AppShell>\r\n            <AppbarContainer appbarProps={appBarProps}\r\n            titleConf={{ns:\"homepage/pages/project-editor/content\", key:\"editor.title\"}}>\r\n                <Content />\r\n            </AppbarContainer>\r\n        </AppShell>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from \"@mui/material\"\r\nimport React, { PropsWithChildren, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nexport interface ButtonConfirmProps {\r\n    title?: string | React.ReactNode\r\n    content?: string | React.ReactNode\r\n    confirmText?: string | React.ReactNode\r\n    cancelText?: string | React.ReactNode\r\n    onConfirm?: () => void\r\n    onCancel?: () => void\r\n    onClose?: (confirmed:boolean) => void\r\n    cancelId?: string\r\n    confirmId?: string\r\n}\r\n\r\nexport function ButtonConfirm({ title, content, confirmText, cancelText, onConfirm, onCancel, onClose , cancelId, confirmId, children }: ButtonConfirmProps & PropsWithChildren) {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const {t} = useTranslation('fanfanlo/mui/dialog/content')\r\n    return (\r\n        <>\r\n            <span onClick={() => setIsOpen(true)}>\r\n                {children}  \r\n            </span>\r\n            <Dialog open={isOpen} onClose={() => setIsOpen(false)}>\r\n                <DialogTitle>{title || t('ButtonConfirm.title')}</DialogTitle>\r\n                <DialogContent>{content || t('ButtonConfirm.content')}</DialogContent>\r\n                <DialogActions>\r\n                    <Button id={cancelId || 'btn-dialog-button-confirm-cancel'}\r\n                    data-id={cancelId || 'btn-dialog-button-confirm-cancel'}\r\n                    onClick={()=>{setIsOpen(false); onCancel?.();onClose?.(false)}}>{cancelText || t('ButtonConfirm.cancel')}</Button>\r\n                    <Button id={confirmId || 'btn-dialog-button-confirm-confirm'}\r\n                    data-id={confirmId || 'btn-dialog-button-confirm-confirm'}\r\n                    onClick={()=>{setIsOpen(false); onConfirm?.();onClose?.(true)}}>{confirmText || t('ButtonConfirm.confirm')}</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/project-editor\",\n      function () {\n        return require(\"private-next-pages/project-editor/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/project-editor\"])\n      });\n    }\n  ","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getIconButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiIconButton', slot);\n}\nconst iconButtonClasses = generateUtilityClasses('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'colorError', 'colorInfo', 'colorSuccess', 'colorWarning', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge', 'loading', 'loadingIndicator', 'loadingWrapper']);\nexport default iconButtonClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { alpha } from '@mui/system/colorManipulator';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport CircularProgress from \"../CircularProgress/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport iconButtonClasses, { getIconButtonUtilityClass } from \"./iconButtonClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    color,\n    edge,\n    size,\n    loading\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading', disabled && 'disabled', color !== 'default' && `color${capitalize(color)}`, edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    loadingIndicator: ['loadingIndicator'],\n    loadingWrapper: ['loadingWrapper']\n  };\n  return composeClasses(slots, getIconButtonUtilityClass, classes);\n};\nconst IconButtonRoot = styled(ButtonBase, {\n  name: 'MuiIconButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.loading && styles.loading, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  textAlign: 'center',\n  flex: '0 0 auto',\n  fontSize: theme.typography.pxToRem(24),\n  padding: 8,\n  borderRadius: '50%',\n  color: (theme.vars || theme).palette.action.active,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  variants: [{\n    props: props => !props.disableRipple,\n    style: {\n      '--IconButton-hoverBg': theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n      '&:hover': {\n        backgroundColor: 'var(--IconButton-hoverBg)',\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }, {\n    props: {\n      edge: 'start'\n    },\n    style: {\n      marginLeft: -12\n    }\n  }, {\n    props: {\n      edge: 'start',\n      size: 'small'\n    },\n    style: {\n      marginLeft: -3\n    }\n  }, {\n    props: {\n      edge: 'end'\n    },\n    style: {\n      marginRight: -12\n    }\n  }, {\n    props: {\n      edge: 'end',\n      size: 'small'\n    },\n    style: {\n      marginRight: -3\n    }\n  }]\n})), memoTheme(({\n  theme\n}) => ({\n  variants: [{\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      color: 'inherit'\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()) // check all the used fields in the style below\n  .map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()) // check all the used fields in the style below\n  .map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      '--IconButton-hoverBg': theme.vars ? `rgba(${(theme.vars || theme).palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha((theme.vars || theme).palette[color].main, theme.palette.action.hoverOpacity)\n    }\n  })), {\n    props: {\n      size: 'small'\n    },\n    style: {\n      padding: 5,\n      fontSize: theme.typography.pxToRem(18)\n    }\n  }, {\n    props: {\n      size: 'large'\n    },\n    style: {\n      padding: 12,\n      fontSize: theme.typography.pxToRem(28)\n    }\n  }],\n  [`&.${iconButtonClasses.disabled}`]: {\n    backgroundColor: 'transparent',\n    color: (theme.vars || theme).palette.action.disabled\n  },\n  [`&.${iconButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n})));\nconst IconButtonLoadingIndicator = styled('span', {\n  name: 'MuiIconButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => styles.loadingIndicator\n})(({\n  theme\n}) => ({\n  display: 'none',\n  position: 'absolute',\n  visibility: 'visible',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  color: (theme.vars || theme).palette.action.disabled,\n  variants: [{\n    props: {\n      loading: true\n    },\n    style: {\n      display: 'flex'\n    }\n  }]\n}));\n\n/**\n * Refer to the [Icons](/material-ui/icons/) section of the documentation\n * regarding the available icon options.\n */\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiIconButton'\n  });\n  const {\n    edge = false,\n    children,\n    className,\n    color = 'default',\n    disabled = false,\n    disableFocusRipple = false,\n    size = 'medium',\n    id: idProp,\n    loading = null,\n    loadingIndicator: loadingIndicatorProp,\n    ...other\n  } = props;\n  const loadingId = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp ?? /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": loadingId,\n    color: \"inherit\",\n    size: 16\n  });\n  const ownerState = {\n    ...props,\n    edge,\n    color,\n    disabled,\n    disableFocusRipple,\n    loading,\n    loadingIndicator,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(IconButtonRoot, {\n    id: loading ? loadingId : idProp,\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled || loading,\n    ref: ref,\n    ...other,\n    ownerState: ownerState,\n    children: [typeof loading === 'boolean' &&\n    /*#__PURE__*/\n    // use plain HTML span to minimize the runtime overhead\n    _jsx(\"span\", {\n      className: classes.loadingWrapper,\n      style: {\n        display: 'contents'\n      },\n      children: /*#__PURE__*/_jsx(IconButtonLoadingIndicator, {\n        className: classes.loadingIndicator,\n        ownerState: ownerState,\n        children: loading && loadingIndicator\n      })\n    }), children]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The icon to display.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);\n    if (found) {\n      return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the loading indicator is visible and the button is disabled.\n   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).\n   * @default null\n   */\n  loading: PropTypes.bool,\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default, it renders a `CircularProgress` that is labeled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default IconButton;"],"names":["projectNamespace","triggersNamespace","timeNamespace","useProxyWatch","useTranslation","Box","Grid2","UI","data","t","timeout","javaData","sx","width","b","container","size","span","input","id","data-id","type","value","onChange","e","Number","target","ulid","createTriggerUtils","createDefultData","init","triggerTimeoutUtils","ActionOrTriggerListTypeEnum","getTriggerOrActionListPageParams","ProjectMemberType","projectEventUtils","throwTraceError","createActionOrTriggerButtonRender","timeoutTriggerItem","i18nNs","nameKey","group","descriptionKey","LinkRender","onSelect","query","item","res","addAction","trigger","triggerGroup","dispatchEditEvent","EditType","add","projectMemberType","projectInfo","window","history","back","updateAction","timeGroup","items","appNamespace","Stack","Button","useRouter","childToProjectDataUtils","triggerWhenActivityInUtils","router","backPath","pathname","pn","an","cn","onChangeClick","triggerList","getTriggerListByProp","project","triggerActionGroup","triggerAction","console","error","projectId","triggerActionGroupId","triggerActionId","triggerGroupId","triggerId","triggerType","onClickChange","direction","spacing","onClick","autoWebViewJs","isRealInAndroid","openPnAnInfoWindow","createRandomEnglishCharacters","activityInItem","onAddSelect","onChangeSelect","info","Math","floor","random","action","mergeDataToDefultData","log","openSelfByPackage","updateJavaData","appGroup","triggerListGroups","initTriggerListGroups","createMergeToDefaultData","mergeDataWith","TriggerUtilsMap","registerTriggerUtils","key","utils","Error","getTriggerUtils","create","list","push","update","Dispatcher","createDispatchEvent","hasWindow","androidJsGlobalName","android","global","jsBridgeDispatcher","getWebViewJsId","webViewJsId","listeningMap","initJsBridgeCalled","initJsBridge","onCallJsEvent","event","JSON","stringify","index","Object","entries","callbackEventType","fun","once","undefined","dispatch","result","webViewJsListen","listen","toString","webViewJsRemoveListen","removeListen","Dialog","DialogActions","DialogContent","DialogTitle","TextField","useState","React","EditableText","setText","title","cancelText","saveText","contentText","helperText","minHeight","children","editText","setEditText","isEditing","setIsEditing","handleEdit","s","style","cursor","textAlign","display","backgroundColor","open","onClose","aria-label","autoFocus","required","fullWidth","variant","createSvgIcon","jsx","_jsx","d","getProxyTarget","proxyUtils","_","projectsHistoryMap","Map","addProjectHistory","runPauseProxyFn","cloneDeep","p","get","set","getProjectHistory","removeProjectHistory","delete","getProjectLastHistory","length","takeProjectSnapshoot","last","isEqual","date","Date","toISOString","projectHistoryIsChanged","isSameProjectHistoryId","projectStore","loadI18nValue","toProxy","toast","map","dispatcher","projectSavedEvent","editProjectInfoUtils","edit","createProjectEditInfo","getEditInfoById","findProject","listenProjectSaved","fn","addListener","askStay","giveup","updated","historyId","testTime","toLocaleString","save","saveProject","success","createContext","ProjectEditInfoContext","useEffect","getProxyDispatcher","listenAnyWildcard","useWatchListOperation","setList","unsub","count","WeakMap","getUpdateVersion","prefix","version","has","now","old","getUpdateVersionKey","actionGroupType","getActionGroupElement","GroupCheckList1Context","triggerActionGroupType","triggerGroupType","ButtonConfirm","Log","objectCountUtils","useWatchUpdates","Checkbox","FormControlLabel","FormGroup","IconButton","useContext","DeleteOutlineIcon","getProjectDataByGroup","projectData","getTriggerGroupElement","getTriggerActionGroupElement","Check2","logger","isPaused","l","groupCheckList1Context","onRemoveClick","splice","check","label","control","data-checked","data-value","checked","getNewCountId","onConfirm","content","Check1","Provider","checks2","GroupCheck","isSequential","listSize","c","checks","checks1","updateChecks2","forEach","i","Array","fill","ActionListOrTriggerListPageLink","attrs","path","btnId","handleClick","keys","q","URLSearchParams","href","ActionListContext","ActionUtilsMap","Action","actionData","onDeleteComfirmed","indexOf","position","padding","marginTop","marginBottom","right","top","bottom","borderRight","left","borderLeft","ActionGroupContext","ActionList","actionGroup","isArray","div","TriggerActionContext","TriggerActionGroupContext","Switch","ActionGroup","editInfo","actionGroupId","actionType","setIsSequential","border","alignItems","aria-checked","TriggerContext","TriggerListContext","Trigger","triggerData","TriggerGroupContext","TriggerList","TriggerGroup","getParentWatchProxy","HandymanIcon","NotificationsNoneIcon","TriggerAction","name","setName","handleNameChange","handleDelete","parent","data-id-trigger-action","createDefultTriggerAction","toParent","AddIcon","TableRowsIcon","TriggerActionGroup","groupName","setGroupName","handleGroupNameChange","addTriggerAction","newTriggerAction","getTriggerActionGroupElementByProp","data-id-trigger-action-group","ta","mergeProjectDataToDefultData","ProjectContext","getParentProxyTarget","watchUpdates","CloseIcon","Paper","styled","SaveIcon","BootstrapDialog","theme","ProjectContent","data-id-project","StayAlert","createCountedLogger","toLeave","handleClose","handleLeaveWithoutSave","deleteDraft","handleSaveAndLeave","handleStayAndEdit","getObjectCount","handleSaveToDraftAndLeave","addDraft","aria-labelledby","m","color","palette","grey","dividers","ProjectTools","onRunClick","EditProjectBuilder","findDraftOrSavedProject","createProject","draftPorjct","proxyProject","parentProject","checkUpdated","findSavedProject","Content","canBack","defaultPrevented","Title","clickToSetProjectName","flexDirection","gap","flexGrow","paddingLeft","h2","AppbarContainer","AppShell","initActionListGroups","ProjectEditor","appBarProps","backDispatcher","appbarProps","titleConf","ns","confirmText","onCancel","cancelId","confirmId","isOpen","setIsOpen","generateUtilityClasses","generateUtilityClass","getIconButtonUtilityClass","slot","iconButtonClasses","PropTypes","clsx","chainPropTypes","composeClasses","unstable_useId","useId","alpha","memoTheme","createSimplePaletteValueFilter","useDefaultProps","ButtonBase","CircularProgress","capitalize","jsxs","_jsxs","useUtilityClasses","ownerState","classes","disabled","edge","loading","slots","root","loadingIndicator","loadingWrapper","IconButtonRoot","overridesResolver","props","styles","flex","fontSize","typography","pxToRem","borderRadius","vars","active","transition","transitions","duration","shortest","variants","disableRipple","activeChannel","hoverOpacity","marginLeft","marginRight","filter","main","mainChannel","IconButtonLoadingIndicator","visibility","transform","forwardRef","inProps","ref","className","disableFocusRipple","idProp","loadingIndicatorProp","other","loadingId","centerRipple","focusRipple","propTypes","node","found","Children","toArray","some","child","isValidElement","join","object","string","oneOfType","oneOf","bool","arrayOf","func"],"sourceRoot":"","ignoreList":[12,16,22,23,24,25,36,40,42,43]}