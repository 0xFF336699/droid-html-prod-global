{"version":3,"file":"static/chunks/1913-48de7b825d85ebf2.js","mappings":"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","sources":["webpack://_N_E/../../../../src/utils/debug/object-count-utils.ts","webpack://_N_E/../../../src/dispatcher/throttle.ts","webpack://_N_E/../../libs/droid/project-interface/src/common/project-contexts.tsx","webpack://_N_E/../../libs/droid/android/src/htmls/accessibility-info-buttons/accessibility-info-buttons.ts","webpack://_N_E/../../../src/dispatcher/IDispatcher.ts","webpack://_N_E/../../../src/dispatcher/Dispatcher.ts","webpack://_N_E/../../../src/watcher/proxyWatch.ts","webpack://_N_E/../../../src/watcher/proxyUtils.ts"],"sourcesContent":["const map = new WeakMap<any, any>()\r\nlet count = 1\r\nconst getRanNum = function(){\r\n    var result = [];\r\n   for(var i=0;i<1;i++){\r\n     var ranNum = Math.ceil(Math.random() * 25);\r\n       result.push(String.fromCharCode(65+ranNum));\r\n   }\r\n   return  result.join('');\r\n }\r\nexport const objectCountUtils = {\r\n    getObjectCount(target:any){\r\n        if(map.has(target)){\r\n            return map.get(target)\r\n        }\r\n        const id = `ID[${++count}]`;\r\n        // (target as any).___global___id___ = id;\r\n        map.set(target, id);\r\n        return id;\r\n    },\r\n    removeObjectCount(target:any){\r\n        if(map.has(target)){\r\n            map.delete(target)\r\n            count--\r\n        }\r\n    },\r\n    setObjectCount(target:any, id:any, key?:any){\r\n        map.set(target, id);\r\n        // (target as any)[key || '___global___id___'] = id\r\n        return id\r\n    },\r\n    getNewCountId(){\r\n        return ++count\r\n    }\r\n}\r\n\r\n","import { IDispatcher } from \".\"\r\n\r\ninterface IPropertyChangeData{\r\n    prop:any\r\n    now:any\r\n    old:any\r\n}\r\nexport const listenAnyWildcard = \"*\"\r\nexport const multiUpdatedDispatchWildcard = \"**\"\r\n/**\r\n * 创建一个节流器，它能够在属性变更时创建一个用Promise包装后能够在本次事件循环的末尾执行的节流器\r\n * @param dispatcher 事件派发器\r\n * @param listenWildcard 监听通配符，当对象的属性变更时，会派发事件通知侦听函数该属性已经变更。\r\n * @param dispatchWildcard 派发通配符，如被侦听对象有1-n个属性变更，则本次事件循环的末尾会派发事件通知侦听函数本次变更的属性。\r\n * @returns \r\n */\r\n\r\n\r\n\r\nexport function createThrottle(dispatcher:IDispatcher, listenWildcard:string = listenAnyWildcard, dispatchWildcard:string = multiUpdatedDispatchWildcard){\r\n    let isUpdating = false\r\n    let changeList:IPropertyChangeData[] = []\r\n    let p:Promise<any>|null = null\r\n    function handler(prop:any, now:any, old:any){\r\n        if(isUpdating){\r\n            console.warn(\"throttle handler is updating, skip\", `prop=${prop}, now=${now}, old=${old}`)\r\n            console.dir(dispatcher, {depth:10})\r\n            return;\r\n        }\r\n        changeList.push({prop, now, old})\r\n        trottle()\r\n    }\r\n\r\n\r\n    function trottle(){\r\n        if(p)return;\r\n        p = Promise.resolve().then(()=>{\r\n            dispatch()\r\n        })\r\n    }\r\n    function dispatch(){\r\n        isUpdating = true\r\n        dispatcher.dispatch(dispatchWildcard, changeList)\r\n        changeList = []\r\n        isUpdating = false\r\n        p = null\r\n    }\r\n    return dispatcher.addListener(listenWildcard, handler)\r\n}","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { IActionGroup, IActionData, IActionShellData, IActionJavaData } from \"../action\";\r\nimport { ITriggerGroup, ITriggerData, ITriggerShellData, ITriggerJavaData } from \"../trigger\";\r\nimport { ITriggerActionGroup, ITriggerAction } from \"../trigger-action\";\r\nimport { IProjectData } from \"../project\";\r\nimport { IGroup, GroupCheckList2, GroupCheckList1 } from \"../common\";\r\nimport { IChildToProjectData, projectDataToUniqueId } from \"../utils\";\r\nimport { StorePageContext, toProxy, useWatchUpdates, watchUpdates } from \"@fanfanlo\";\r\nimport _ from \"lodash\";\r\n\r\nexport const ProjectContext = createContext<IProjectData>({} as IProjectData)\r\n\r\nexport const TriggerActionGroupContext = createContext<ITriggerActionGroup>({} as ITriggerActionGroup)\r\n\r\nexport const TriggerActionContext = createContext<ITriggerAction>({} as ITriggerAction)\r\n\r\nexport const TriggerGroupContext = createContext<ITriggerGroup>({} as ITriggerGroup)\r\n\r\nexport const TriggerListContext = createContext<ITriggerData<ITriggerShellData, ITriggerJavaData>[]>([] as ITriggerData<ITriggerShellData, ITriggerJavaData>[])\r\n\r\nexport const TriggerContext = createContext<ITriggerData<ITriggerShellData, ITriggerJavaData>>({} as ITriggerData<ITriggerShellData, ITriggerJavaData>)\r\n\r\nexport const ActionGroupContext = createContext<IActionGroup>({} as IActionGroup)\r\n\r\nexport const ActionListContext = createContext<IActionData<IActionShellData, IActionJavaData>[]>([] as IActionData<IActionShellData, IActionJavaData>[])\r\n\r\nexport const ActionContext = createContext<IActionData<IActionShellData, IActionJavaData>>({} as IActionData<IActionShellData, IActionJavaData>)\r\n\r\nexport const GroupContext = createContext<IGroup<any>>({} as IGroup<any>)\r\n\r\nexport const GroupCheckList2Context = createContext<GroupCheckList2>([] as GroupCheckList2)\r\n\r\nexport const GroupCheckList1Context = createContext<GroupCheckList1>([] as GroupCheckList1)\r\n\r\n\r\nexport function useProjectUniqueKeyValue<T>(initProjectInfoFn:(projectInfo: IChildToProjectData) => void, key:string, defValue:T):[T, (v:T) => void, string]{\r\n    const projectInfo: IChildToProjectData = {}\r\n    initProjectInfoFn(projectInfo)\r\n    const store = useContext(StorePageContext);\r\n    const uniqueKey = `${key}:${projectDataToUniqueId(projectInfo)}`\r\n    const [value, _setValue] = useState<T>(store.get(uniqueKey) as T || defValue)\r\n    function setValue(v:T){\r\n        _setValue(v)\r\n        store.set(uniqueKey, v)\r\n    }\r\n    const v = _.isObject(value) ? toProxy(value) : value\r\n    if(_.isObject(value)){\r\n        useEffect(()=>{\r\n            watchUpdates(value, (info)=>{\r\n                store.set(uniqueKey, v)\r\n                // 这里逻辑上返回的v是重新构建的，所以其它地方引用v的时候需要注意删除侦听，或者这里得寻找统一方法处理\r\n                // setValue((_.isArray(value) ? [...value] : {...value}) as T)\r\n            })\r\n        }, [])\r\n    }\r\n    return [v, setValue, uniqueKey]\r\n}","import to from \"await-to-js\";\r\nimport { Manifest } from \"../../android/components/Manifest\";\r\nimport { runPermissionGroup } from \"../../android/components/permissionGroupCreator\";\r\nimport { createWindowConfCopy } from \"../../android/win/WindowConf\";\r\nimport { WebViewJs } from \"../../android/WebViewJs\";\r\nimport { env } from \"../../confs/env\";\r\nimport { Log } from \"@fanfanlo\";\r\n\r\nconst fileLog = new Log(false, 'acceccibility-info-buttons');\r\n\r\nfunction createCopy(callbackEventType:string, windowId:string){\r\n    let windowConf = {\r\n        htmlConf:{\r\n            // url:`${env.htmlOrigin}pages/accessibility-info-buttons/#/`,\r\n            url:`${env.htmlOrigin}pages/accessibility-info-buttons/index.html`,\r\n            webViewJsParams:{\r\n                javaToJsDataString:JSON.stringify({event:callbackEventType})\r\n            }\r\n        },windowId\r\n    }\r\n    return createWindowConfCopy(windowConf)\r\n}\r\n\r\nexport function openHtmlShowA11yNodeInfoWindow(callbackEventType:string, windowId:string){\r\n    const fnLog = fileLog.sub(false, 'openHtmlShowA11yNodeInfoWindow_fn');\r\n    fnLog.info('callbackEventType =', callbackEventType, 'windowId =', windowId)\r\n    let conf = createCopy(callbackEventType, windowId);\r\n    fnLog.info(\"conf =\", conf);\r\n    return WebViewJs.instance.createWindow(JSON.stringify(conf))\r\n}\r\nexport async function openHtmlShowA11yNodeInfoButton(callbackEventType:string, windowId:string){\r\n    let [err, group] = await to(runPermissionGroup(Manifest.Permission.SYSTEM_ALERT_WINDOW,\r\n        Manifest.Permission.BIND_ACCESSIBILITY_SERVICE));\r\n        console.log('openHtmlShowA11yNodeInfoButton_fn group=', group, 'err=', err);\r\n    if(err){\r\n        if(\"message\" in err){\r\n            alert(`悬浮窗权限申请错误 message= ${err.message}`)\r\n        }else{\r\n            try{\r\n\r\n                alert(`悬浮窗权限申请错误 err= ${JSON.stringify(err)}`)\r\n            }catch(err){\r\n                \r\n                alert(`悬浮窗权限申请错误 stringify err ${err}`)\r\n            }\r\n        }\r\n        // alert(`openHtmlShowA11yNodeInfoButton_fn error err.toString()`)\r\n        WebViewJs.instance.toast(err.toString())\r\n        // showSimpleToast(err.toString())\r\n        return;\r\n    }\r\n    return openHtmlShowA11yNodeInfoWindow(callbackEventType, windowId);\r\n}","\r\n// dispatch事件时可以阻止事件的默认行为\r\nexport const dipspatcherPreventDefault:Record<any, any> = {}\r\nexport function clearDispatcherPreventDefault(){\r\n for(const key in dipspatcherPreventDefault){\r\n    delete dipspatcherPreventDefault[key]\r\n }   \r\n}\r\n// dispatch事件时可以阻止事件循环中之后队列的执行\r\nexport const dipspatcherStopPropagation = {}\r\nexport interface IDispatchEvent<DATA extends any = any, RESULT extends any = any, EXTRA extends any = any, DISPATCHERPROPERTIES extends any = any>{\r\n    type?:IDispatcerType<DISPATCHERPROPERTIES>\r\n    data?:DATA\r\n    result?:RESULT\r\n    extra?:EXTRA\r\n    stoped?:boolean\r\n}\r\nexport type IDispacherHandlerResult = void | any\r\n// return的any如果是dispacherPreventDefault或者dispacherStopPropagation，则表示阻止事件的默认行为或者阻止事件的冒泡，返回其它则不做处理\r\nexport type IHandler = ((...args:any[])=>IDispacherHandlerResult) | (()=>IDispacherHandlerResult)\r\n\r\nexport type IDispatcherProperties<T> = {\r\n    [K in keyof T]: T[K] extends Function ? never : K\r\n}[keyof T];\r\n\r\nexport type IDispatcherFuns<T> = {\r\n    [K in keyof T]: T[K] extends Function ? K : never\r\n}[keyof T];\r\n\r\n\r\nexport type IDispatcerType<T> = IDispatcherProperties<T> | IDispatcherFuns<T> | any\r\nexport type IDispatcherEventMap = Map<any, IHandler>\r\n\r\nexport type DomainType = any\r\nexport type EventType = any\r\nexport type DispatcherUnsubscribe = ()=>void\r\n// export type IDispatcherListenType<T> = T extends IDispatcher ? IDispatcherProperties<T>:any\r\nexport type IDispatcherListenType<T> = T extends IDispatcherEventMap ? IDispatcherFuns<T> : T extends IDispatcher ? IDispatcherProperties<T>:any\r\n\r\nclass DispatchEvent<DATA extends any, RESULT extends any, EXTRA extends any, DISPATCHERPROPERTIES extends any> implements IDispatchEvent<DATA, RESULT, EXTRA, DISPATCHERPROPERTIES>{\r\n    data?:DATA\r\n    result?:RESULT\r\n    extra?:EXTRA\r\n    type?:IDispatcerType<DISPATCHERPROPERTIES>\r\n    stoped?:boolean = false\r\n    constructor(data?:DATA, result?:RESULT,  extra?:EXTRA, type?:IDispatcerType<DISPATCHERPROPERTIES>){\r\n        this.data = data\r\n        this.result = result\r\n        this.extra = extra\r\n        this.type = type\r\n    }\r\n}\r\nexport function createDispatchEvent<DATA extends any, RESULT extends any, EXTRA extends any, DISPATCHERPROPERTIES extends any>(data?:DATA, result?:RESULT, extra?:EXTRA, type?:IDispatcerType<DISPATCHERPROPERTIES>):IDispatchEvent<DATA, RESULT, EXTRA, DISPATCHERPROPERTIES>{\r\n    return new DispatchEvent<DATA, RESULT, EXTRA, DISPATCHERPROPERTIES>(data, result, extra, type)\r\n}\r\nexport interface IDispatcher{\r\n\r\n    addOnceListener<T>(type:IDispatcherListenType<T>, handler:IHandler, index?:number, weak?:boolean):DispatcherUnsubscribe;\r\n\r\n    addListener<T>(type:IDispatcherListenType<T>, handler:IHandler, index?:number, weak?:boolean):DispatcherUnsubscribe;\r\n    on<T>(type:IDispatcherListenType<T>, handler:IHandler, index?:number, weak?:boolean):DispatcherUnsubscribe;\r\n\r\n    removeListener<T>(type:IDispatcherListenType<T>, handler:IHandler):boolean;\r\n    off<T>(type:IDispatcherListenType<T>, handler:IHandler):boolean;\r\n\r\n    addDomainListener<T>(domain:any, type:IDispatcherListenType<T>, handler:IHandler, index?:number, weak?:boolean):DispatcherUnsubscribe;\r\n\r\n    addDomainOnceListener<T>(domain:any, type:IDispatcherListenType<T>, handler:IHandler, index?:number, weak?:boolean):DispatcherUnsubscribe;\r\n\r\n    removeDomain(domain:any):boolean;\r\n\r\n    // return的any如果是dispacherPreventDefault，则表示阻止事件的默认行为。return true则表示派发事件完成。注意 这个方式跟传统EventDispatcher利用event对象来让各方获知是否阻止默认行为以及冒泡不同，不排除以后会增加event对象到rest里来实现。\r\n    dispatch<T>(type:IDispatcherListenType<T>, ...rest:any[]):boolean|any;\r\n    emit<T>(type:IDispatcherListenType<T>, ...rest:any[]):boolean|any;\r\n\r\n    willTrigger<T>(type:IDispatcherListenType<T>):boolean;\r\n\r\n    removeAllListeners():void;\r\n}","import _ from 'lodash';\r\nimport { DispatcherUnsubscribe, DomainType, EventType, IDispatcher, IDispatcherListenType, IHandler, dipspatcherPreventDefault, dipspatcherStopPropagation } from './IDispatcher';\r\n\r\ninterface IHandlerData{\r\n    type?:EventType\r\n    handler?:IHandler\r\n    weak?:WeakRef<IHandler>\r\n    once?:boolean\r\n    domain?:any\r\n}\r\n\r\ninterface IHandlerDataFindResult{\r\n    type:EventType\r\n    // handler:IHandler\r\n    handlers?:IHandlerData[]\r\n    index:number\r\n    handlerData?:IHandlerData\r\n}\r\ntype IHandlerDataMap = Map<EventType, IHandlerData[]>\r\n\r\nlet count = 0\r\nexport class Dispatcher implements IDispatcher {\r\n    // private ____dispatcher_index = count++\r\n  private handlerMap: IHandlerDataMap = new Map()\r\n\r\n  private findHandlersByDomain(type:EventType, domain?:DomainType):IHandlerData[]{\r\n    const handlers = this.handlerMap.get(type)\r\n    if(!handlers) return []\r\n    return handlers.filter(h=>h.domain === domain)\r\n  }\r\n  private getHandler(type:EventType, handler:IHandler):IHandlerDataFindResult{\r\n    const res:IHandlerDataFindResult = {type,index:-1}\r\n    const handlers = this.handlerMap.get(type)\r\n    if(!handlers) return res\r\n    res.handlers = handlers\r\n    res.index = handlers.findIndex(h=>h.handler === handler || h.weak?.deref() === handler)\r\n    if(res.index > -1){\r\n        res.handlerData = handlers[res.index]\r\n    }\r\n    return res\r\n  }\r\n  private addHandler(type:EventType, handler:IHandler, once:boolean, index?:number, weak?:boolean, domain?:DomainType){\r\n    const findResult = this.getHandler(type, handler)\r\n    if(findResult.index > -1){\r\n        if(findResult.handlerData){\r\n            findResult.handlerData.once = once\r\n            findResult.handlerData.domain = domain\r\n            if(weak && !findResult.handlerData.weak?.deref()){\r\n                findResult.handlerData.weak = new WeakRef(handler)\r\n            }else{\r\n                findResult.handlerData.handler = handler\r\n            }\r\n            if(index !== undefined){\r\n                findResult.handlers?.splice(findResult.index, 1)\r\n                findResult.handlers?.splice(index, 0, findResult.handlerData)\r\n            }\r\n            return\r\n        }\r\n    } \r\n    const handlerData:IHandlerData = {handler,once,domain,type}\r\n    if(weak){\r\n        handlerData.weak = new WeakRef(handler)\r\n    }else{\r\n        handlerData.handler = handler\r\n    }\r\n    let handlers = this.handlerMap.get(type)\r\n    if(!handlers) {\r\n        handlers = []\r\n        this.handlerMap.set(type, handlers)\r\n    }\r\n    const i = _.isNumber(index) ? index : handlers.length\r\n    handlers.splice(i, 0, handlerData)\r\n  }\r\n\r\n  private removeHandler(type:EventType, handler:IHandler):boolean{\r\n    const findResult = this.getHandler(type, handler)\r\n    if(findResult.index === -1) return false\r\n    findResult.handlers?.splice(findResult.index, 1)\r\n    return true\r\n  }\r\n\r\n  removeAllListeners(): void {\r\n    this.handlerMap.clear();\r\n  }\r\n  addDomainListener<T>(domain: unknown, type: IDispatcherListenType<T>, handler: IHandler, index?: number, weak?:boolean): DispatcherUnsubscribe {\r\n    this.addHandler(type, handler, false, index, !!weak, domain)\r\n    return ()=>{\r\n        this.removeListener(type, handler)\r\n    }\r\n  }\r\n\r\n  addDomainOnceListener<T>(domain: any, type: IDispatcherListenType<T>, handler: IHandler, index?: number, weak?:boolean): DispatcherUnsubscribe {\r\n    this.addHandler(type, handler, true, index, !!weak, domain)\r\n    return ()=>{\r\n        this.removeListener(type, handler)\r\n    }\r\n  }\r\n\r\n  addListener<T>(type: IDispatcherListenType<T>, handler: IHandler, index?: number, weak?:boolean): DispatcherUnsubscribe {\r\n    if (type === '') {\r\n      try {\r\n        throw new Error('addDomainEventListener error no type');\r\n      } catch (e) {\r\n        console.log('EventDispatcher2', 'addDomainEventListener', 'err', type, e);\r\n      }\r\n    }\r\n    if (typeof handler != 'function') {\r\n      try {\r\n        throw new Error('addDomainEventListener error no cb');\r\n      } catch (e) {\r\n        console.log('EventDispatcher2', 'addDomainEventListener', 'err', handler, e);\r\n      }\r\n    }\r\n    this.addHandler(type, handler, false, index, !!weak, undefined)\r\n    return () => {\r\n      this.removeListener(type, handler);\r\n    };\r\n  }\r\n  on<T>(type: IDispatcherListenType<T>, handler: IHandler, index?: number, weak?:boolean): DispatcherUnsubscribe{\r\n    return this.addListener(type, handler, index, weak)\r\n  }\r\n  addOnceListener<T>(type: IDispatcherListenType<T>, handler: IHandler, index?: number, weak?:boolean): DispatcherUnsubscribe {\r\n    this.addHandler(type, handler, true, index, weak, undefined)\r\n    return () => {\r\n        this.removeListener(type, handler)\r\n    }\r\n  }\r\n\r\n  dispatch<T>(type: IDispatcherListenType<T>, ...rest: any[]): boolean|any {\r\n    const handlers = this.handlerMap.get(type)\r\n    if(!handlers) return false\r\n    const unloads:IHandlerData[] = []\r\n    let blockPreventDefault = false\r\n    for(const handler of handlers){\r\n        const h = handler.handler || handler.weak?.deref()\r\n        if(h){\r\n            // const res = h(...rest);\r\n            const res = h.apply(null, rest);\r\n            if(handler.once){\r\n                unloads.push(handler)\r\n            }\r\n            if(res === dipspatcherPreventDefault){\r\n                blockPreventDefault = true\r\n            }\r\n            if(res === dipspatcherStopPropagation){\r\n                break\r\n            }\r\n        }else{\r\n            unloads.push(handler)\r\n        }\r\n    }\r\n    for(const handlerData of unloads){\r\n        const index = handlers.indexOf(handlerData)\r\n        if(index > -1){\r\n            handlers.splice(index, 1)\r\n        }\r\n    }\r\n    return blockPreventDefault ? dipspatcherPreventDefault : true\r\n  }\r\n\r\n  emit<T>(type: IDispatcherListenType<T>, ...rest: any[]): boolean|any {\r\n    return this.dispatch(type, ...rest)\r\n  }\r\n\r\n  removeDomain(domain: any): boolean {\r\n    const handlers = this.findHandlersByDomain(domain)\r\n    if(handlers.length === 0) return false\r\n    \r\n    for(const handler of handlers){\r\n        if(handler.handler){\r\n            this.removeHandler(handler.type, handler.handler)\r\n        }\r\n    }\r\n    return true\r\n  }\r\n\r\n  removeListener<T>(type: IDispatcherListenType<T>, handler: IHandler): boolean {\r\n    return this.removeHandler(type, handler)\r\n  }\r\n  off<T>(type: IDispatcherListenType<T>, handler: IHandler): boolean {\r\n    return this.removeListener(type, handler)\r\n  }\r\n  willTrigger<T>(type: IDispatcherListenType<T>): boolean {\r\n    return this.handlerMap.has(type)\r\n  }\r\n}\r\n","import _ from 'lodash';\r\nimport { createThrottle, Dispatcher, DispatcherUnsubscribe, IDispatcher, listenAnyWildcard } from '../dispatcher';\r\nimport { Log } from '../log';\r\nimport { objectCountUtils } from '../utils';\r\nimport { proxyUtils } from './proxyUtils';\r\n\r\n// 设计目的是通过代理能够进行拦截的特性，利用这个特性来派发事件，从而实现对对象的监听。\r\n\r\n// 它还有个附加功能，就是可以深度侦听还未创建的属性\r\n\r\n\r\n// console.trace('proxywatch initialize')\r\n\r\nconst proxyWatchSymbolKey = Symbol('proxyWatch');\r\nconst proxyWatchOriginTargetKey = Symbol('proxyWatchOriginTarget');\r\n// 用于生成数组索引的类型\r\ntype ArrayIndices = 'length'| '0' | '1' | '2';\r\n\r\n\r\n// 递归构建属性链\r\n// export type PropertiesChain<T> = T extends (infer U)[]\r\n//   ? ArrayIndices | `${ArrayIndices}.${PropertiesChain<U>}`\r\n//   : T extends object\r\n//     ? {\r\n//         [K in keyof T]: K extends string ? `${K}` | `${K}.${PropertiesChain<T[K]>}` : never;\r\n//       }[keyof T]\r\n//     : never;\r\nexport type PropertiesChainBase<T> = T extends (infer U)[]\r\n  ? ArrayIndices | `${ArrayIndices}.${PropertiesChainBase<U>}`\r\n  : T extends object\r\n    ? {\r\n        [K in keyof T]: K extends string ? `${K}` | `${K}.${PropertiesChainBase<T[K]>}` : never;\r\n      }[keyof T]\r\n    : never;\r\nexport type PropertiesChain<T> = PropertiesChainBase<T> | string[];\r\n// 监听属性更新\r\ntype OnUpdate<V> = (now: V, old?: V) => void;\r\n\r\n// 代理对象\r\nexport interface IProxyObject<T> {\r\n  // 原始对象\r\n  target: T;\r\n  // 代理对象\r\n  proxy: T;\r\n  // 事件派发器\r\n  dispatcher: IDispatcher;\r\n  throttleUnsubscribe: DispatcherUnsubscribe;\r\n  targetId: number;\r\n  proxyId: number;\r\n}\r\nexport type UnWatch = () => void;\r\ninterface IWatchResult<T, U> {\r\n  unwatch: UnWatch;\r\n  value?: U;\r\n}\r\n\r\ninterface IOnUndefinedInfo {\r\n  prop: string;\r\n  propertyChain: string| string[];\r\n  nextChain: string | string[];\r\n  //key可能存在也可能不存在，但是值为undefined\r\n  noChildNode: boolean;\r\n  // key不存在，可能是动态添加的key，或者是class对象没有初始化key\r\n  noPropertyKey: boolean;\r\n  // 值为undefined。可能key不存在，或者上级节点不存在，或者该属性被赋值为undefined。\r\n  // 注意，null被视为赋值了，所以不会触发执行OnUndefined函数\r\n  noValue: boolean;\r\n}\r\n\r\ntype OnUndefined = (info: IOnUndefinedInfo) => void;\r\n\r\nexport const proxyArrayUpdateEvent = 'proxyArrayUpdate';\r\nconst objectMap = new WeakMap<object, IProxyObject<any>>();\r\nconst proxyMap = new WeakMap<object, IProxyObject<any>>();\r\nexport const ProxyArrayStringTag = 'ProxyArray';\r\n/**\r\n * 数组代理对象\r\n * forEach等方法不会调用get来循环数组，所以遇到这种循环时需要在循环体中用toProxy(arr)[index]来访问被访问的元素才能在更改时触发array响应变更的事件。\r\n * 关于为什么forEach等方法不会调用get来循环数组还不知道\r\n * @param target\r\n * @param dispatcher\r\n * @returns\r\n */\r\n\r\nfunction arrayHandler<T extends Array<any>>(target: T, dispatcher: IDispatcher) {\r\n  // const originalTarget = getProxyTarget(target)\r\n  // (target as any)[Symbol.toStringTag] = ProxyArrayStringTag\r\n  const t = target as Array<any>;\r\n  // 检查处理可能变更的数据\r\n  function dispatchChange(start: number, end: number, oldTarget: Array<any>) {\r\n    const updated: Array<{ now: any; old: any; index: number }> = [];\r\n    for (let i = start; i < end; i++) {\r\n      const now = t[i];\r\n      const old = oldTarget[i];\r\n      if (now === old) continue;\r\n      updated.push({ now, old, index: i });\r\n      dispatcher.dispatch(i.toString(), now, old, i, target, oldTarget);\r\n      dispatcher.dispatch(listenAnyWildcard, i, now, old, target, oldTarget);\r\n    }\r\n    dispatcher.dispatch(proxyArrayUpdateEvent, updated, target, oldTarget);\r\n  }\r\n\r\n  const handler: ProxyHandler<T> = {\r\n    deleteProperty(target, prop) {\r\n      if (!(prop in target)) return false;\r\n      const old = (target as any)[prop];\r\n      const bl = Reflect.deleteProperty(target, prop);\r\n      if (bl && old !== undefined) {\r\n        // delete后派发事件\r\n        dispatcher.dispatch(prop.toString(), undefined, old);\r\n      }\r\n      return bl;\r\n    },\r\n    get(target, prop, receiver) {\r\n      if (prop === proxyWatchOriginTargetKey) {\r\n        console.log('get proxyWatchOriginTargetKey array called', target);\r\n        return target;\r\n      }\r\n      switch (prop) {\r\n        case 'push':\r\n        case 'unshift':\r\n        case 'fill':\r\n        case 'copyWithin':\r\n        case 'pop':\r\n        case 'shift':\r\n        case 'splice':\r\n        case 'sort':\r\n        case 'reverse':\r\n          return function (...args: any[]) {\r\n            const as = unshellProxies(args)\r\n            const oldTarget = [...(target as Array<any>)];\r\n            const res = (target as any)[prop](...as);\r\n            const len = Math.max(oldTarget.length, t.length);\r\n            dispatchChange(0, len, oldTarget);\r\n            if(oldTarget.length != target.length){\r\n              dispatcher.dispatch('length', target.length, oldTarget.length);\r\n            }\r\n            return res;\r\n          };\r\n        default:\r\n          let v = Reflect.get(target, prop, receiver);\r\n\r\n          if (typeof v === 'function') {\r\n            // v = (v as any).bind(proxyUtils.isPauseProxy ? toProxy(target) : target);\r\n            // const isProxied = !!isProxy(this)\r\n            // console.log('call function', isProxied, v)\r\n            return v;\r\n          }\r\n          if (_.isObject(v) && !proxyUtils.isPauseProxy) return getProxyObject(v).proxy;\r\n          return v;\r\n      }\r\n    },\r\n    // ownKeys(target){\r\n    //     return [...Reflect.ownKeys(target), proxyWatchSymbolKey]\r\n    // },\r\n    set(target, prop, v, receiver) {\r\n      // console.log('ssssssssssset look look id', objectCountUtils.getObjectCount(t), prop, v)\r\n      const as = unshellProxies([v])\r\n      const value = as[0]\r\n      let oldLength: number = 0;\r\n      let oldTarget = [] as Array<any>;\r\n      if (prop === 'length') {\r\n        oldLength = t.length;\r\n        oldTarget = [...(target as Array<any>)];\r\n      }\r\n      const old = Reflect.get(target, prop, receiver);\r\n      const bl = Reflect.set(target, prop, value, receiver);\r\n      if (!bl) {\r\n        // 对象不可写 还有哪些情况？\r\n        return bl;\r\n      }\r\n      //派发属性变更事件，事件type为属性名\r\n      dispatcher.dispatch(prop, value, old);\r\n\r\n      dispatcher.dispatch(listenAnyWildcard, prop, value, old, target, target);\r\n      // 如果长度发生变化，则派发长度变化事件\r\n      if (prop === 'length' && oldLength !== t.length) {\r\n        const nowLength = t.length;\r\n        // const oldTarget = [...target as Array<any>]\r\n        dispatchChange(Math.min(oldLength, nowLength), Math.max(oldLength, nowLength), oldTarget);\r\n      }\r\n      return bl;\r\n    },\r\n  };\r\n  return handler;\r\n}\r\nexport type UpdateObjectEventMap<T> = {\r\n  [K in keyof T]: string;\r\n};\r\n\r\nexport const ProxyObjectStringTag = 'ProxyObject';\r\n// 判断是否是已经代理过的对象\r\nexport function isProxyObject(target: any) {\r\n  return proxyMap.has(target) && !_.isObject(proxyMap.get(target)?.target);\r\n}\r\nexport function isProxyArray(target: any) {\r\n  return proxyMap.has(target) && _.isArray(proxyMap.get(target)?.target);\r\n}\r\nexport function isProxy(target: any) {\r\n  return proxyMap.get(target);\r\n}\r\nfunction objectHandler<T extends object>(target: T, dispatcher: IDispatcher, eventMap?: UpdateObjectEventMap<T>) {\r\n  // (target as any)[Symbol.toStringTag] = ProxyObjectStringTag\r\n  function checkDispatchEventMap(prop: string | Symbol, now: T[keyof T] | undefined, old: T[keyof T] | undefined) {\r\n    if (eventMap && eventMap[prop as keyof T]) {\r\n      // console.log('ddddddddddddddispatch from eventmap', prop, now, old, target)\r\n      dispatcher.dispatch((eventMap as any)[prop as any], now, old, target);\r\n    } else {\r\n      // console.log('ddddddddddddddispatch from prop', prop, now, old, target)\r\n      dispatcher.dispatch(prop, now, old, target);\r\n    }\r\n    // console.log('ddddddddddddddispatch listenAnyWildcard', prop, now, old, target)\r\n    dispatcher.dispatch(listenAnyWildcard, prop, now, old, target);\r\n  }\r\n  const handler: ProxyHandler<T> = {\r\n    deleteProperty(target, prop) {\r\n      if (!(prop in target)) return false;\r\n      const old = (target as any)[prop];\r\n      const bl = Reflect.deleteProperty(target, prop);\r\n      if (bl && old !== undefined) checkDispatchEventMap(prop, undefined, old);\r\n      return bl;\r\n    },\r\n    get(target, prop, receiver) {\r\n      if (prop === proxyWatchOriginTargetKey) {\r\n        console.log('get proxyWatchOriginTargetKey object called', target);\r\n        return target;\r\n      }\r\n      let v = Reflect.get(target, prop, receiver);\r\n      if (typeof v === 'function') {\r\n        // if (prop === 'toString') {\r\n        //   v = function () {\r\n        //     return 'i proxy watch object';\r\n        //   } as any;\r\n        // }\r\n        // v = (v as any).bind(target);\r\n        return v;\r\n      }\r\n      if (_.isObject(v) && !proxyUtils.isPauseProxy) return getProxyObject(v).proxy;\r\n      return v;\r\n    },\r\n    set(target, prop, v, receiver) {\r\n      const as = unshellProxies([v])\r\n      const value = as[0]\r\n      const old = Reflect.get(target, prop, receiver);\r\n      const bl = Reflect.set(target, prop, value, receiver);\r\n      if (!bl) return bl;\r\n      checkDispatchEventMap(prop, value, old);\r\n      return bl;\r\n    },\r\n  };\r\n  return handler;\r\n}\r\n// const testProxyKeyMap = new Map<any, any>()\r\n// const testTargetKeyMap = new Map<any, any>()\r\n/**\r\n * 获取或生成代理对象，它能够在属性变更时派发事件通知侦听函数该属性已经变更。\r\n * @param target 要被代理的对象\r\n * @returns IProxyObject\r\n */\r\nexport function getProxyObject<T extends object>(\r\n  t: T,\r\n  dispatcher?: IDispatcher,\r\n  eventMap?: UpdateObjectEventMap<T>,\r\n): IProxyObject<T> {\r\n  if (!t) {\r\n    console.trace('getProxyObject no target', t);\r\n    throw new Error('getProxyObject no target');\r\n  }\r\n  if (!_.isObject(t)) {\r\n    console.trace('getProxyObject target is not object', t);\r\n    throw new Error('getProxyObject target is not object');\r\n  }\r\n  if (_.isFunction(t)) {\r\n    // console.log('getProxyObject_fn target is a function', t);\r\n    // console.trace('getProxyObject target is function', t);\r\n    // throw new Error('getProxyObject target is function');\r\n  }\r\n  const target = getProxyWatchRealTarget(t);\r\n  if (proxyMap.has(target)) {\r\n    console.log('poroxy map has target', proxyMap.get(target));\r\n    throw new Error('poroxy map has target');\r\n  }\r\n  const ts = ('toString' in target)?target.toString() :'';\r\n  if (ts.indexOf('i proxy watch') > -1) {\r\n    console.log('eerror proxy watch ts, target', typeof target, ts, target);\r\n    console.log('eerror proxy watch proxymap', objectCountUtils.getObjectCount(target), proxyMap.get(target));\r\n    console.log('eerror proxy watch objectmap', objectMap.get(target));\r\n    // console.log('try to get real proxy', testProxyKeyMap.get(target));\r\n    // console.log('try to get real target2', testTargetKeyMap.get(target));\r\n    console.log('try to get symbol target', (target as any)[proxyWatchSymbolKey]);\r\n    console.log('try to get symbol target2', (t as any)[proxyWatchSymbolKey]);\r\n    console.trace('eerror proxy watch target');\r\n    throw new Error('eerror proxy watch');\r\n  }\r\n  let proxyObject = (objectMap.get(target) || proxyMap.get(target)) as IProxyObject<T>;\r\n  if (proxyObject) return proxyObject;\r\n  // target[Symbol.toStringTag] = _.isArray(target) ? ProxyArrayStringTag : ProxyObjectStringTag\r\n  dispatcher = dispatcher || new Dispatcher();\r\n\r\n  const handler = _.isArray(target) ? arrayHandler(target, dispatcher) : objectHandler(target, dispatcher, eventMap);\r\n  const throttleUnsubscribe = createThrottle(dispatcher);\r\n\r\n  const proxy = new Proxy(target, handler);\r\n  const targetId = objectCountUtils.getObjectCount(target)\r\n  const proxyId = objectCountUtils.setObjectCount(proxy, `proxy-${targetId}`, 'proxy-id')\r\n  // testProxyKeyMap.set(proxy, target)\r\n  // testTargetKeyMap.set(target, proxy)\r\n  proxyObject = {\r\n    target,\r\n    proxy,\r\n    dispatcher,\r\n    throttleUnsubscribe,\r\n    targetId,\r\n    proxyId,\r\n  };\r\n\r\n    // console.log('create new porxy33333', proxyObject.targetId, proxyObject.proxyId, proxyObject);\r\n  //   console.log('ts =', ts)\r\n  objectMap.set(target, proxyObject);\r\n  proxyMap.set(proxy, proxyObject);\r\n  return proxyObject;\r\n}\r\n\r\n// export function getProxyWatchRealTarget<T>(target: T): T {\r\n//   proxyUtils.pauseProxy();\r\nexport function getProxyWatchRealTarget<T>(target: T): T {\r\n  proxyUtils.pauseProxy();\r\n  // console.log('getProxyWatchRealTarget isProxy(target)', objectCountUtils.getObjectCount(target), isProxy(target));\r\n  let t = isProxy(target)?.target || target;\r\n  // console.log('getProxyWatchRealTarget t', objectCountUtils.getObjectCount(t), t, isProxy(t));\r\n  // console.log('getProxyWatchRealTarget isProxy(t)', isProxy(t));\r\n  let c = 0;\r\n  while (t && isProxy(t)) {\r\n    // console.log('unshell getRealTarget a', c, t);\r\n    c++;\r\n    if (c > 5) break;\r\n    if (c > 2) {\r\n      // console.log('unshell getRealTarget b', c, t);\r\n    }\r\n    t = isProxy(t)?.target;\r\n  }\r\n  proxyUtils.resumeProxy();\r\n  return t;\r\n}\r\n// 销毁代理对象，可以用来手动销毁确认用不到的对象。\r\nexport function destroyProxyObject<T extends object>(target: T, destroyChildren: boolean = false) {\r\n  const proxyObject = objectMap.get(target);\r\n  if (!proxyObject) return;\r\n  objectMap.delete(target);\r\n  proxyObject.dispatcher.removeAllListeners();\r\n  if (!destroyChildren) return;\r\n  for (const key in proxyObject.target) {\r\n    destroyProxyObject(proxyObject.target[key], destroyChildren);\r\n  }\r\n}\r\n/**\r\n * 通过proxy监听对象属性变更，此方法可以监听一个属性链当中任意属性的变更。\r\n * 譬如const a = {b:{name:\"John\"},d:[{age:3}]}\r\n * const onUpdate = (now, old)=>{console.log(\"now value=\",now, \"old value=\",old)}\r\n * const onUndefined = (info)=>{console.log(\"value is undefined, info=\", info)}\r\n * const {proxy, unwatch} = proxyWatch(a, 'a.d.name' onUpdate, onUndefined)\r\n *\r\n * 通过proxy来更改a的属性或其子级属性，此时侦听函数onUpdate应该能响应\r\n * proxy.b.name = \"Joy\"\r\n *\r\n * 通过原始数据修改方式\r\n * a.b.name = \"Elly\"\r\n * 手动触发proxy更新，触发后onUpdate应该能响应\r\n * proxyUpdateObject(a.b, \"name\", \"Elly\")\r\n *\r\n * @param target\r\n * @param propertyChain\r\n * @param onUpdate\r\n * @param onUndefined\r\n * @returns\r\n */\r\nexport function proxyWatch<T extends object, U>(\r\n  target: T,\r\n  propertyChain: PropertiesChain<T>| string[],\r\n  onUpdate: OnUpdate<U>,\r\n  onUndefined?: OnUndefined,\r\n): IWatchPropertyResult<T> {\r\n  if (!target) {\r\n    throw new Error('watch no target');\r\n  }\r\n  if (!propertyChain) {\r\n    throw new Error('watch no propertyChain');\r\n  }\r\n  function _onUpdate(now: U, old?: U){\r\n    const proxiedNow = _.get(target, propertyChain) as U;\r\n    // console.log('proxiedNow=', propertyChain, proxiedNow);\r\n    // if(_.isObject(proxiedNow)){\r\n    //     console.log('proxynow id=', objectCountUtils.getObjectCount(proxiedNow))\r\n    // }\r\n    onUpdate(proxiedNow, old);\r\n  }\r\n  const propertyWatchResult = watchProperty(target, propertyChain, _onUpdate, onUndefined);\r\n  return propertyWatchResult;\r\n}\r\n\r\ninterface IWatchPropertyResult<T> extends IProxyObject<T> {\r\n  unwatch: UnWatch;\r\n}\r\nfunction watchProperty<T extends object, U, K extends keyof T>(\r\n  target: T,\r\n  propertyChain: PropertiesChain<T>| string[],\r\n  onUpdate: OnUpdate<U>,\r\n  onUndefined?: OnUndefined,\r\n): IWatchPropertyResult<T> {\r\n  const logger = new Log(false, 'watchProperty_fn');\r\n  logger.pause = true;\r\n  const { prop, nextChain } = getChainProperty(propertyChain);\r\n  logger.log('propertyChain=', propertyChain, 'prop=', prop, 'nextChain=', nextChain);\r\n  const proxyObject = getProxyObject(target);\r\n  let subWatch: IWatchResult<T, any> | null = null;\r\n  let unsubscribe: DispatcherUnsubscribe | null = null;\r\n  const v = (target as any)[prop as keyof T];\r\n\r\n  logger.log( 'nextChain=', nextChain, 'v=', v);\r\n  if (v) {\r\n    if (nextChain) {\r\n      subWatch = proxyWatch(v, nextChain, onUpdate, onUndefined);\r\n    }\r\n  }\r\n  // 如果属性不存在，且有下级属性链，则需要触发onUndefined\r\n  if ((!v && nextChain)) {\r\n    const noPropertyKey = !(prop in target);\r\n    const noChildNode = !!nextChain && !v;\r\n    if (noPropertyKey || noChildNode) {\r\n      const noValue = noChildNode || v === undefined;\r\n      const info: IOnUndefinedInfo = {\r\n        prop: prop,\r\n        propertyChain: propertyChain,\r\n        nextChain: nextChain,\r\n        noChildNode,\r\n        noPropertyKey,\r\n        noValue,\r\n      };\r\n      logger.log('onUndefined=', info);\r\n      onUndefined?.(info);\r\n    }\r\n  }\r\n  // 如果属性存在，且没有下级属性链，则直接触发onUpdate\r\n  if (!nextChain) {\r\n    // 这样设计的目的是为了允许属性的值是undefined或null\r\n    logger.log('no nextChain onUpdate=', onUpdate, 'v=', v);\r\n    onUpdate(v);\r\n  }\r\n  const onUpdateHandler = nextChain\r\n    ? (now: T[K], old: T[K]) => {\r\n        logger.log('onUpdateHandler_fn=', onUpdate, 'v=', v);\r\n        subWatch?.unwatch();\r\n        subWatch = null;\r\n        if (now) {\r\n          if (_.isArray(now)) {\r\n          } else if (_.isObject(now)) {\r\n            //为属性的新值重新侦听下级变更。\r\n            subWatch = proxyWatch(now, nextChain as PropertiesChain<NonNullable<T[K]>>, onUpdate, onUndefined);\r\n          } else {\r\n            // 应该是非预期的属性，得观察一下是否应该抛错。\r\n            // js允许类型变化，所以不能确定这个值是否是基元值还是对象\r\n          }\r\n        }\r\n      }\r\n    : onUpdate;\r\n  listenProp(prop);\r\n  function listenProp(prop: string) {\r\n    unsubscribe?.();\r\n    unsubscribe = null;\r\n    if (!prop) return;\r\n    unsubscribe = proxyObject.dispatcher.addListener(prop, onUpdateHandler);\r\n  }\r\n  function unwatch() {\r\n    unsubscribe?.();\r\n    unsubscribe = null;\r\n    subWatch?.unwatch();\r\n    subWatch = null;\r\n  }\r\n  return { unwatch, ...proxyObject };\r\n}\r\nfunction unshellProxies(list:any[]){\r\n  const res = list.map(p=>{\r\n    const t = getProxyWatchRealTarget(p)\r\n    if(!_.isObject(t))return t;\r\n    for(const key in t){\r\n      const v = (t as any)[key];\r\n      if(_.isObject(v)){\r\n        if(isProxy(v)){\r\n          (t as any)[key] = getProxyWatchRealTarget(v);\r\n        }\r\n      }\r\n      // 原先是这样修改的，但是会对只读属性抛错。现在修改为上面代码了但是不知道是否有隐藏问题。\r\n      // (t as any)[key] = unshellProxies([(t as any)[key]])[0];\r\n    }\r\n    return t\r\n  })\r\n  return res\r\n}\r\n\r\nfunction getChainProperty(chain: string| string[]) {\r\n  if(typeof chain === 'string'){\r\n    let index = chain.indexOf('.');\r\n    const prop = index > -1 ? chain.slice(0, index) : chain;\r\n    return { prop, nextChain: chain.replace(`${prop}${index > -1 ? '.' : ''}`, '') };\r\n  }\r\n  const newChain = chain.slice();\r\n  const prop = newChain.shift();\r\n  if(!prop){\r\n    throw new Error('getChainProperty no prop');\r\n  }\r\n  return { prop, nextChain: newChain.length > 0 ? newChain : undefined };\r\n}\r\n\r\n\r\nexport function proxyUpdateObject<T extends object, K extends keyof T>(target: T, key: K, oldValue?: T[K]): boolean {\r\n  const proxyObject = getProxyObject(target);\r\n  if (!proxyObject) return false;\r\n  const now = proxyObject.target[key];\r\n  proxyObject.dispatcher.dispatch(key, now, oldValue);\r\n  return true;\r\n}\r\n\r\nexport function proxyUpdateObjectProperties<T extends object>(\r\n  target: T,\r\n  fresh: Partial<T>,\r\n  prev?: Partial<T>,\r\n): boolean {\r\n  const proxyObject = getProxyObject(target);\r\n  if (!proxyObject) return false;\r\n  for (const key in fresh) {\r\n    const now = proxyObject.target[key];\r\n    const old = prev?.[key];\r\n    proxyObject.dispatcher.dispatch(key as any, now, old);\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function proxyUpdateAllProperties<T extends object>(target: T) {\r\n  const proxyObject = getProxyObject(target);\r\n  if (!proxyObject) return;\r\n  for (const key in proxyObject.target) {\r\n    proxyUpdateObject(proxyObject.target, key);\r\n  }\r\n}\r\n\r\nexport function toProxy<T extends object>(target: T): T {\r\n  return getProxyObject(target).proxy;\r\n}\r\nexport function getProxyDispatcher<T extends object>(target: T): IDispatcher {\r\n  return getProxyObject(target).dispatcher;\r\n}\r\n\r\nexport function getUnshellProxyTarget<T extends object>(target: T): T {\r\n  const proxy = proxyMap.get(target)?.proxy;\r\n  let t = target;\r\n  if (proxy) {\r\n    t = proxy[proxyWatchOriginTargetKey];\r\n  }\r\n  return t;\r\n}\r\n","\r\nexport const proxyUtils = {\r\n    isPauseProxy:false,\r\n    pauseProxy(){\r\n        this.isPauseProxy = true\r\n    },\r\n    resumeProxy(){\r\n        this.isPauseProxy = false\r\n    },\r\n    runPauseProxyFn<T>(fn:()=>T):T{\r\n        this.pauseProxy()\r\n        const result = fn()\r\n        this.resumeProxy()\r\n        return result\r\n    }\r\n}\r\n"],"names":["createContext","useContext","useEffect","useState","projectDataToUniqueId","StorePageContext","toProxy","watchUpdates","_","ProjectContext","TriggerActionGroupContext","TriggerActionContext","TriggerGroupContext","TriggerListContext","TriggerContext","ActionGroupContext","ActionListContext","ActionContext","GroupContext","GroupCheckList2Context","GroupCheckList1Context","useProjectUniqueKeyValue","initProjectInfoFn","key","defValue","projectInfo","store","uniqueKey","value","_setValue","get","setValue","v","set","isObject","info","to","Manifest","runPermissionGroup","createWindowConfCopy","WebViewJs","env","Log","fileLog","createCopy","callbackEventType","windowId","windowConf","htmlConf","url","htmlOrigin","webViewJsParams","javaToJsDataString","JSON","stringify","event","openHtmlShowA11yNodeInfoWindow","fnLog","sub","conf","instance","createWindow","openHtmlShowA11yNodeInfoButton","err","group","Permission","SYSTEM_ALERT_WINDOW","BIND_ACCESSIBILITY_SERVICE","console","log","alert","message","toast","toString","target","prop"],"sourceRoot":"","ignoreList":[]}